<?xml version="1.0"?>
<doc>
  <assembly>
    <name />
  </assembly>
  <members>
    <member name="M:Microsoft.SPOT.Application.#ctor">
      <summary> </summary>
    </member>
    <member name="E:Microsoft.SPOT.Application.Exit">
      <summary>Occurs just before an application exits. </summary>
    </member>
    <member name="E:Microsoft.SPOT.Application.Startup">
      <summary>Occurs when the Run method of an Application object is called. </summary>
    </member>
    <member name="M:Microsoft.SPOT.Application.OnExit(Microsoft.SPOT.EventArgs)">
      <summary>Raises the Exit event.</summary>
      <param name="e">An EventArgs object that contains the event data for the  Exit event.</param>
    </member>
    <member name="M:Microsoft.SPOT.Application.OnStartup(Microsoft.SPOT.EventArgs)">
      <summary>Raises the Startup event. </summary>
      <param name="e">An EventArgs object that contains the event data for the Startup event.</param>
    </member>
    <member name="M:Microsoft.SPOT.Application.Run(Microsoft.SPOT.Presentation.Window)">
      <summary>Starts a Windows Presentation Foundation (WPF) application and opens a specified window. </summary>
      <param name="window">A Window object representing a window that opens automatically when the WPF application starts running.</param>
    </member>
    <member name="M:Microsoft.SPOT.Application.Run">
      <summary>Starts a Windows Presentation Foundation (WPF) application. </summary>
    </member>
    <member name="M:Microsoft.SPOT.Application.Shutdown">
      <summary>Causes an application to exit. </summary>
    </member>
    <member name="P:Microsoft.SPOT.Application.Current">
      <summary>Gets the Application object for the current application domain.
</summary>
      <returns>
        The Application object for the current AppDomain object.
      </returns>
    </member>
    <member name="P:Microsoft.SPOT.Application.MainWindow">
      <summary>Gets or sets the main window of the current application. </summary>
      <returns>A Window object that represents the current application's main window.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Application.ShutdownMode">
      <summary>Gets or sets the condition that causes the Shutdown method to be called.</summary>
      <returns>A value from the ShutdownMode enumeration. The default return value is OnLastWindowClose. </returns>
    </member>
    <member name="P:Microsoft.SPOT.Application.Windows">
      <summary>Gets the instantiated windows in the current application.</summary>
      <returns>
        A WindowCollection object that contains references to all of the window objects in the current application.
      </returns>
    </member>
    <member name="T:Microsoft.SPOT.Application">
      <summary>Encapsulates a Windows Presentation Foundation (WPF) application.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.#ctor(System.Byte[],Microsoft.SPOT.Bitmap.BitmapImageType)">
      <summary>Initializes a new instance of the Bitmap class to the specified height and width.</summary>
      <param name="imageData">An array of pixel data for the specified image.</param>
      <param name="type">The bitmap type for the specified image.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the Bitmap class to the specified height and width.</summary>
      <param name="width">The width of the current bitmap, in pixels.</param>
      <param name="height">The height of the current bitmap, in pixels.</param>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_AlignmentCenter">
      <summary>Specifies that text is center-aligned as it flows around a bitmap.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_AlignmentLeft">
      <summary>Specifies that text is left-aligned as it flows around a bitmap.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_AlignmentMask">
      <summary>Specifies that you can use a mask to get or set text alignment around a bitmap.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_AlignmentRight">
      <summary>Specifies that text is right-aligned as it flows around a bitmap.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.BLACKNESS">
      <summary>Fills the destination rectangle with the color associated with index number 0 in the physical palette.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.CenterX">
      <summary>Represents the x-coordinate location of the center of the display device, in pixels.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.CenterY">
      <summary>Represents the y-coordinate location of the center of the display device, in pixels.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DSTDKGRAY">
      <summary>Fills the destination rectangle with a dark gray color.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DSTGRAY">
      <summary>Fills the destination rectangle with a gray color.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DSTINVERT">
      <summary>Inverts the destination rectangle.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DSTLTGRAY">
      <summary>Fills the destination rectangle with a light gray color.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_Ellipsis">
      <summary>Specifies that the bitmap text is trimmed to the nearest character, and an ellipsis is inserted at the end of each trimmed line.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_IgnoreHeight">
      <summary>Specifies that if the bitmap text is larger than the space provided, the text is drawn in its full size, rather than being scaled down to fit the value in the Height property.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.MaxHeight">
      <summary>Specifies the maximum height of the display device, in pixels.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.MaxWidth">
      <summary>Specifies the maximum width of the display device, in pixels.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_None">
      <summary>Specifies that there are no format rules.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.OpacityOpaque">
      <summary>Specifies that the current bitmap is opaque.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.OpacityTransparent">
      <summary>Specifies that the current bitmap is transparent.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.PATINVERT">
      <summary>Inverts the source rectangle.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.RANDOM">
      <summary>Fills the destination rectangle or circle with a randomly generated pattern.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.SINGLEPIXEL">
      <summary>Specifies that a circle should have only a single-pixel border and no fill pattern or color.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.SRCCOPY">
      <summary>Copies the source rectangle directly to the destination rectangle.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_TruncateAtBottom">
      <summary>
      Specifies that if the bitmap text is larger than the space provided, the text is truncated at the bottom.
  </summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.WHITENESS">
      <summary>Fills the destination rectangle with the color associated with index number 1 in the physical palette.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_WordWrap">
      <summary>Specifies whether a line of bitmap text automatically wraps words to the beginning of the next line when the line reaches its maximum width.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.BitBlt(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32,System.Int32)">
      <summary>Performs a bit block transfer of the bitmap data corresponding to a rectangle of pixels, transferring the data from a specified source bitmap into the current destination bitmap.</summary>
      <param name="xDst">The x-coordinate of the upper-left corner of the destination rectangle.</param>
      <param name="yDst">The y-coordinate of the upper-left corner of the destination rectangle.</param>
      <param name="nWidth">The width of the source and destination rectangles.</param>
      <param name="nHeight">The height of the source and destination rectangles.</param>
      <param name="pSrc">The source bitmap.</param>
      <param name="xSrc">The x-coordinate of the upper-left corner of the source rectangle.</param>
      <param name="ySrc">The y-coordinate of the upper-left corner of the source rectangle.</param>
      <param name="dwRop">A raster operation code. This code defines how the bitmap data for the source rectangle
    is to be combined with the bitmap data for the destination rectangle.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.Circle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a circle specified by a coordinate pair (x and y) and a radius, using a specified raster operation.</summary>
      <param name="xCenter">The x-coordinate of the center of the circle.</param>
      <param name="yCenter">The y-coordinate of the center of the circle.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="dwRop">A raster operation code.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.Clear">
      <summary>Clears the entire drawing surface.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawEllipse(Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a filled ellipse on the display device.</summary>
      <param name="colorOutline">The outline color.</param>
      <param name="x">The x-coordinate location of the center of the ellipse.</param>
      <param name="y">The y-coordinate location of the center of the ellipse.</param>
      <param name="xRadius">The radius of the ellipse in the x-coordinate direction.</param>
      <param name="yRadius">The radius of the ellipse in the y-coordinate direction.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawEllipse(Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.Double)">
      <summary>Draws an ellipse filled with a specified color gradient.</summary>
      <param name="colorOutline">The outline color.</param>
      <param name="thicknessOutline">The thickness of the ellipse's outline, in pixels.</param>
      <param name="x">The x-coordinate location of the center of the ellipse.</param>
      <param name="y">The y-coordinate location of the center of the ellipse.</param>
      <param name="xRadius">The radius of the ellipse in the x-coordinate direction.</param>
      <param name="yRadius">The radius of the ellipse in the y-coordinate direction.</param>
      <param name="colorGradientStart">The starting color of the color gradient.</param>
      <param name="xGradientStart">The x-coordinate location of the starting point of the color gradient.</param>
      <param name="yGradientStart">The y-coordinate location of the starting point of the color gradient.</param>
      <param name="colorGradientEnd">The ending color of the color gradient.</param>
      <param name="xGradientEnd">The x-coordinate location of the ending point of the color gradient.</param>
      <param name="yGradientEnd">The y-coordinate location of the ending point of the color gradient.</param>
      <param name="opacity">The opacity of the ellipse.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawImage(System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt16)">
      <summary>Draws a rectangular block of pixels with a specified degree of transparency.</summary>
      <param name="xDst">The x-coordinate location of the upper-left corner of the rectangular area on the display to which the specified pixels are to be copied.</param>
      <param name="yDst">The y-coordinate location of the upper-left corner of the rectangular area on the display to which the specified pixels are to be copied.</param>
      <param name="bitmap">The source bitmap.</param>
      <param name="xSrc">The x-coordinate location of the upper-left corner of the rectangular area in the source bitmap from which the specified pixels are to be copied.</param>
      <param name="ySrc">The x-coordinate location of the upper-left corner of the rectangular area in the source bitmap from which the specified pixels are to be copied.</param>
      <param name="width">The width of the rectangular block of pixels to be copied.</param>
      <param name="height">The height of the rectangular block of pixels to be copied.</param>
      <param name="opacity">The degree of opacity of the bitmap. A value of 0 (zero) makes the bitmap completely opaque (not transparent at all); a value of 255 makes the bitmap completely transparent.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawImage(System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a rectangular block of pixels on the display device.</summary>
      <param name="xDst">The x-coordinate location of the upper-left corner of the rectangular area on the display to which the specified pixels are to be copied.</param>
      <param name="yDst">The y-coordinate location of the upper-left corner of the rectangular area on the display to which the specified pixels are to be copied.</param>
      <param name="bitmap">The source bitmap.</param>
      <param name="xSrc">The x-coordinate location of the upper-left corner of the rectangular area in the source bitmap from which the specified pixels are to be copied.</param>
      <param name="ySrc">The y-coordinate location of the upper-left corner of the rectangular area in the source bitmap from which the specified pixels are to be copied.</param>
      <param name="width">The width of the rectangular block of pixels to be copied.</param>
      <param name="height">The height of the rectangular block of pixels to be copied.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawLine(Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a line on the display device.</summary>
      <param name="color">The color of the line.</param>
      <param name="thickness">The thickness of the line, in pixels.</param>
      <param name="x0">The x-coordinate location of the line's starting point.</param>
      <param name="y0">The y-coordinate location of the line's starting point.</param>
      <param name="x1">The x-coordinate location of the line's ending point.</param>
      <param name="y1">The y-coordinate location of the line's ending point.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a rectangle defined by two coordinate (x,y) pairs.</summary>
      <param name="x1">The x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="y1">The y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="x2">The x-coordinate of the lower-right corner of the rectangle.</param>
      <param name="y2">The y-coordinate of the lower-right corner of the rectangle.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawRectangle(Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.UInt16)">
      <summary>Draws a rectangle on the display device.</summary>
      <param name="colorOutline">The color of the rectangle's outline.</param>
      <param name="thicknessOutline">The thickness of the rectangle's outline, in pixels.</param>
      <param name="x">The x-coordinate of the rectangle's upper-left corner.</param>
      <param name="y">The y-coordinate of the rectangle's upper-left corner.</param>
      <param name="width">The width of the rectangle, in pixels.</param>
      <param name="height">The height of the rectangle, in pixels.</param>
      <param name="xCornerRadius">The x-coordinate value of the corner radius used to produce rounded corners on the rectangle.</param>
      <param name="yCornerRadius">The y-coordinate value of the corner radius used to produce rounded corners on the rectangle.</param>
      <param name="colorGradientStart">The starting color for a color gradient.</param>
      <param name="xGradientStart">Holds the x coordinate of the starting location of the color gradient.</param>
      <param name="yGradientStart">Holds the y coordinate of the starting location of the color gradient.</param>
      <param name="colorGradientEnd">Specifies the ending color of the color gradient.</param>
      <param name="xGradientEnd">Holds the x coordinate of the ending location of the color gradient.</param>
      <param name="yGradientEnd">Holds the y coordinate of the ending location of the color gradient.</param>
      <param name="opacity">Specifies the opacity of the fill color. Set to 0x00 for completely transparent. Set to 0xFF for completely opague.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawTextInRect(System.String@,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,Microsoft.SPOT.Presentation.Media.Color,Microsoft.SPOT.Font)">
      <summary>Draws text in a specified rectangle.</summary>
      <param name="text">The text to be drawn. This parameter contains the remaining text, or an empty string, if the complete text string did not fit in the specified rectangle.</param>
      <param name="xRelStart">The x-coordinate, relative to the rectangle, at which text drawing is to begin.</param>
      <param name="yRelStart">The y-coordinate, relative to the rectangle, at which text drawing is to begin.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
      <param name="dtFlags">Flags that specify the format of the text.</param>
      <param name="color">The color to be used for the text.</param>
      <param name="font">The font to be used for the text.</param>
      <returns>true if all of the specified text was drawn; false if this is not the case and the text parameter contains the remaining text that was not drawn.
      </returns>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawTextInRect(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,Microsoft.SPOT.Presentation.Media.Color,Microsoft.SPOT.Font)">
      <summary>Draws text in a specified rectangle.</summary>
      <param name="text">The text to be drawn. This parameter contains the remaining text, or an empty string, if the complete text string did not fit in the specified rectangle.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
      <param name="dtFlags">Flags that specify the format of the text.</param>
      <param name="color">The color to be used for the text.</param>
      <param name="font">The font to be used for the text.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawTextInRect(System.String@,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,Microsoft.SPOT.Font)">
      <summary>Draws text in a specified rectangle.</summary>
      <param name="text">The text to be drawn. This parameter contains the remaining text, or an empty string, if the complete text string did not fit in the specified rectangle.</param>
      <param name="xRelStart">The x-coordinate, relative to the rectangle, at which text drawing is to begin.</param>
      <param name="yRelStart">The y-coordinate, relative to the rectangle, at which text drawing is to begin.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
      <param name="dtFlags">Flags that specify the format of the text.</param>
      <param name="font">The font to be used for the text.</param>
      <returns>true if all of the specified text was drawn; false if this is not the case and the text parameter contains the remaining text that was not drawn.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawTextInRect(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,Microsoft.SPOT.Font)">
      <summary>Draws text in a specified rectangle.</summary>
      <param name="text">The text to be drawn. This parameter contains the remaining text, or an empty string, if the complete text string did not fit in the specified rectangle.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
      <param name="dtFlags">Flags that specify the format of the text.</param>
      <param name="font">The font to be used for the text.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawText(System.String,Microsoft.SPOT.Font,Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32)">
      <summary>Draws text on the display device, using a specified font and color.</summary>
      <param name="text">The text to be drawn.</param>
      <param name="font">The font to be used for the text.</param>
      <param name="color">The color to be used for the text.</param>
      <param name="x">The x-coordinate of the location where text drawing is to begin.</param>
      <param name="y">The y-coordinate of the location where text drawing is to begin.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawText(System.String,System.Int32,System.Int32,Microsoft.SPOT.Font)">
      <summary>Draws text on the display device, using a specified font.</summary>
      <param name="text">The text to be drawn.</param>
      <param name="xPos">The x-coordinate of the location where text drawing is to begin.</param>
      <param name="yPos">The y-coordinate of the location where text drawing is to begin.</param>
      <param name="font">The font to be used for the text.</param>
      <returns>The width of the text, in pixels.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawText(System.String,System.Int32,System.Int32,Microsoft.SPOT.Font,System.Single)">
      <summary>Draws text on the display device, using a specified font and kerning.</summary>
      <param name="text">The text to be drawn.</param>
      <param name="xPos">The x-coordinate of the location where text drawing is to begin.</param>
      <param name="yPos">The y-coordinate of location where text drawing is to begin.</param>
      <param name="font">The font to be used for the text.</param>
      <param name="kerning">The kerning to be used for the text, in pixels.</param>
      <returns>The width of the text, in pixels.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.Flush">
      <summary>Flushes the current bitmap to the display device.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.Flush(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Flushes the current bitmap to the display device.</summary>
      <param name="x">The x-coordinate of the bitmap's upper-left corner.</param>
      <param name="y">The y-coordinate of the bitmap's upper-left corner.</param>
      <param name="width">The width of the bitmap.</param>
      <param name="height">The height of the bitmap.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.GetPixel(System.Int32,System.Int32)">
      <summary>Retrieves the pixel color at a specified location on the display device.</summary>
      <param name="xPos">The x-coordinate of the location where pixel color is to be retrieved.</param>
      <param name="yPos">The y-coordinate of the location where pixel color is to be retrieved.</param>
      <returns>The pixel color at the specified location.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.Line(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a line connecting the two points specified by two coordinate (x,y) pairs.</summary>
      <param name="x1">The x-coordinate of the first point.</param>
      <param name="y1">The y-coordinate of the first point.</param>
      <param name="x2">The x-coordinate of the second point.</param>
      <param name="y2">The y-coordinate of the second point.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.MakeTransparent(Microsoft.SPOT.Presentation.Media.Color)">
      <summary>Sets a bitmap's transparent color.</summary>
      <param name="color">The color to be used as the bitmap's transparent color.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.MaskBlt(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32,Microsoft.SPOT.Bitmap)">
      <summary>Combines the data for the source bitmap and the current (destination) bitmap, using the specified mask.</summary>
      <param name="xDst">The x-coordinate of the upper-left corner of the destination rectangle.</param>
      <param name="yDst">The y-coordinate of the upper-left corner of the destination rectangle.</param>
      <param name="nWidth">The width of the source and destination rectangles.</param>
      <param name="nHeight">The height of the source and destination rectangles.</param>
      <param name="pSrc">The source bitmap.</param>
      <param name="xSrc">The x-coordinate of the upper-left corner of the source rectangle.</param>
      <param name="ySrc">The y-coordinate of the upper-left corner of the source rectangle.</param>
      <param name="pMask">A mask that specifies how the bitmaps are to be combined.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.PatBlt(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates a bit pattern on a bitmap.</summary>
      <param name="xDst">The x-coordinate of the upper-left corner of the destination rectangle.</param>
      <param name="yDst">The y-coordinate of the upper-left corner of the destination rectangle.</param>
      <param name="nWidth">The width of the source and destination rectangles.</param>
      <param name="nHeight">The height of the source and destination rectangles.</param>
      <param name="dwRop">A raster operation code, which defines the pattern to be created on the bitmap.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.ResetClippingRectangle">
      <summary>Resets a bitmap's clipping region (clipping rectangle) to the entire bitmap.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.RotateBlt(Microsoft.SPOT.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Rotates a bitmap to a specified degree around a specified point.</summary>
      <param name="pSrc">The source bitmap.</param>
      <param name="degree">The degree of rotation.</param>
      <param name="xSrc">The x-coordinate of the center of the source bitmap.</param>
      <param name="ySrc">The y-coordinate of the center of the source bitmap.</param>
      <param name="xDst">The x-coordinate of the center of the destination bitmap.</param>
      <param name="yDst">The y-coordinate of the center of the destination bitmap.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.SetClippingRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Sets the clipping region (clipping rectangle) of a bitmap with a specified coordinate pair (x,y), width, and height.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the clipping rectangle.</param>
      <param name="y">The y-coordinate of the upper-left corner of the clipping rectangle.</param>
      <param name="width">The width of the clipping rectangle.</param>
      <param name="height">The height of the clipping rectangle.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.SetPixel(System.Int32,System.Int32,Microsoft.SPOT.Presentation.Media.Color)">
      <summary>Sets the color for a specified pixel.</summary>
      <param name="xPos">The x-coordinate of the pixel whose color you want to set.</param>
      <param name="yPos">The y-coordinate of the pixel whose color you want to set.</param>
      <param name="color">The color you want to set for the specified pixel.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.SetPixel(System.Int32,System.Int32,System.Boolean)">
      <summary>Turns a specified pixel on or off.</summary>
      <param name="xPos">The x-coordinate of the pixel you want to set.</param>
      <param name="yPos">The y-coordinate of the pixel you want to set.</param>
      <param name="fSet">The parameter that you can set to true to turn the pixel on, or set to false to turn the pixel off.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.StretchImage(System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32,System.UInt16)">
      <summary>Draws a rectangular block of pixels on the display device, stretching or shrinking the rectangular area as necessary.</summary>
      <param name="xDst">The x-coordinate of the upper-left corner of the rectangular area to which the pixels are to be copied.</param>
      <param name="yDst">The y-coordinate of the upper-left corner of the rectangular area to which the pixels are to be copied.</param>
      <param name="bitmap">The source bitmap.</param>
      <param name="width">The width of the rectangluar area to which the pixels are to be copied.</param>
      <param name="height">The height of the rectangluar area to which the pixels are to be copied.</param>
      <param name="opacity">The bitmap's degree of opacity. A value of 0 (zero) makes the bitmap completely opaque (not transparent at all); a value of 255 makes the bitmap completely transparent.</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.TransparentBlt(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32)">
      <summary>Combines the data for the specified source bitmap and the current bitmap (destination bitmap) in a defined rectangular area.</summary>
      <param name="xDst">The x-coordinate of the upper-left corner of the destination rectangle.</param>
      <param name="yDst">The y-coordinate of the upper-left corner of the destination rectangle.</param>
      <param name="nWidth">The width of the source and destination rectangles.</param>
      <param name="nHeight">The height of the source and destination rectangles.</param>
      <param name="pSrc">The source bitmap.</param>
      <param name="xSrc">The x-coordinate of the upper-left corner of the source rectangle.</param>
      <param name="ySrc">The y-coordinate of the upper-left corner of the source rectangle.</param>
    </member>
    <member name="P:Microsoft.SPOT.Bitmap.Height">
      <summary>Gets the height of the current bitmap.</summary>
      <returns>The height of the current bitmap, in pixels.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Bitmap.Width">
      <summary>Gets the width of the current bitmap.</summary>
      <returns>The width of the current bitmap, in pixels.</returns>
    </member>
    <member name="T:Microsoft.SPOT.Bitmap" />
    <member name="M:Microsoft.SPOT.CancelEventArgs.#ctor">
      <summary>Initializes a new instance of the CancelEventArgs class.</summary>
    </member>
    <member name="F:Microsoft.SPOT.CancelEventArgs.Cancel">
      <summary>Contains a value that indicates whether a specific event should be canceled.</summary>
    </member>
    <member name="T:Microsoft.SPOT.CancelEventArgs">
      <summary>Provides data for an event that can be canceled. </summary>
    </member>
    <member name="T:Microsoft.SPOT.ConstraintException">
      <summary>The exception that is thrown when an action is attempted that violates a constraint.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>Causes a break in execution if the specified assertion (condition) evaluates to true.</summary>
      <param name="condition">The condition to be evaluated. If the return value is true, program execution stops.</param>
      <param name="message">The text to be displayed if the assertion is true.</param>
      <param name="detailedMessage">The detailed message to be displayed if the assertion is true.</param>
    </member>
    <member name="M:Microsoft.SPOT.Debug.Assert(System.Boolean)">
      <summary>Causes a break in execution if the specified assertion (condition) evaluates to true.</summary>
      <param name="condition">The condition to be evaluated. If the return value is true, program execution stops.</param>
    </member>
    <member name="M:Microsoft.SPOT.Debug.Assert(System.Boolean,System.String)">
      <summary>Causes a break in execution if the specified assertion (condition) evaluates to true.</summary>
      <param name="condition">The condition to be evaluated. If the return value is true, program execution stops.</param>
      <param name="message">The text to be displayed if the assertion is true.</param>
    </member>
    <member name="M:Microsoft.SPOT.Debug.DumpBuffer(System.Byte[],System.Boolean,System.Boolean)">
      <summary>Prints the data for a specified buffer to the standard output stream.</summary>
      <param name="buf">An array containing the bytes of buffer data.</param>
      <param name="fCRC">A Boolean value that specifies whether to compute and print the cyclic redundancy check (CRC) for each row of data.</param>
      <param name="fOffset">A Boolean value that specifies whether to print the memory offset address for each row of data.</param>
    </member>
    <member name="M:Microsoft.SPOT.Debug.DumpHeap">
      <summary>Prints all available heap information to the standard output stream.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Debug.DumpPerfCounters">
      <summary>Prints performance counter information to the standard output stream.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Debug.DumpStack">
      <summary>Prints all available stack information to the standard output stream.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Debug.GC(System.Boolean)">
      <summary>Runs garbage collection, a service that automatically reclaims unused computer memory.</summary>
      <param name="force">A Boolean value that specifies whether garbage collection should be forced.</param>
      <returns>The amount of free (unused) memory, in bytes.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Debug.Print(System.String)">
      <summary>Prints a message (followed by the current line terminator) to the standard output stream.</summary>
      <param name="text">The message to be printed to the standard output stream.</param>
    </member>
    <member name="T:Microsoft.SPOT.Debug">
      <summary>Provides a set of methods and properties that help you debug your code.</summary>
    </member>
    <member name="E:Microsoft.SPOT.Dispatcher.ShutdownFinished">
      <summary>Occurs when a Dispatcher object (a dispatcher) finishes shutting down. </summary>
    </member>
    <member name="E:Microsoft.SPOT.Dispatcher.ShutdownStarted">
      <summary>Occurs when a Dispatcher object (a dispatcher) begins the shutdown process.
</summary>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary>Executes a specified delegate on the thread on which a particular Dispatcher object (dispatcher) was created.</summary>
      <param name="method">
        A delegate to a method that takes one argument, which is pushed into the dispatcher's event queue.</param>
      <param name="args">The object to be passed as an argument to the delegate.</param>
      <returns>An object, which is returned immediately after the BeginInvoke method is called, that can be used to interact with the delegate as it is pending execution in the event queue.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.CheckAccess">
      <summary>Determines whether the calling thread has access to the current Dispatcher object (dispatcher). </summary>
      <returns>true if the calling thread has access to the current dispatcher; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.FromThread(System.Threading.Thread)">
      <summary>Gets the Dispatcher object (dispatcher) for a specified thread.</summary>
      <param name="thread">The thread from which the dispatcher is to be obtained.</param>
      <returns>The dispatcher for the specified thread. </returns>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.InvokeShutdown">
      <summary>Initiates the shutdown process for a Dispatcher object (dispatcher) synchronously.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.Invoke(System.TimeSpan,System.Delegate,System.Object[])">
      <summary>Executes a specified delegate with a specified argument. </summary>
      <param name="timeout">The maximum amount of time the program will wait for the operation to finish.</param>
      <param name="method">A delegate to a method that takes multiple arguments, which is pushed onto the Dispatcher object's event queue.</param>
      <param name="args">An object to be passed as an argument to the specified method. This can be a null reference if no arguments are needed.</param>
      <returns>The return value from the invoked delegate, or a null reference if the delegate has no return value. </returns>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.PushFrame(Microsoft.SPOT.DispatcherFrame)">
      <summary>Pushes an execution frame onto the event queue of a Dispatcher object (dispatcher).</summary>
      <param name="frame">The frame to be processed by the dispatcher.</param>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.Run">
      <summary>Initiates the event queue of a Dispatcher object (dispatcher).
</summary>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.VerifyAccess">
      <summary>Determines whether the calling thread has access to the current Dispatcher object (dispatcher).</summary>
    </member>
    <member name="P:Microsoft.SPOT.Dispatcher.CurrentDispatcher">
      <summary>Gets the Dispatcher object (dispatcher) for the thread that is currently executing and creates a new dispatcher if one is not already associated with the current thread.
</summary>
      <returns>The dispatcher that is associated with the current thread.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Dispatcher.HasShutdownFinished">
      <summary>Determines whether the current Dispatcher object (dispatcher) has finished shutting down.
</summary>
      <returns>true if the current dispatcher has finished shutting down; otherwise, false. </returns>
    </member>
    <member name="P:Microsoft.SPOT.Dispatcher.HasShutdownStarted">
      <summary>
    Determines whether the current Dispatcher object (dispatcher) is shutting down.</summary>
      <returns>true if the current dispatcher has started shutting down; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Dispatcher.Thread">
      <summary>Gets the thread with which the current Dispatcher object (dispatcher) is associated.
</summary>
      <returns>The thread that is associated with the current dispatcher.</returns>
    </member>
    <member name="T:Microsoft.SPOT.Dispatcher">
      <summary>Provides services for maintaining the event queue for a thread.</summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherFrame.#ctor(System.Boolean)">
      <summary>
    Initializes a new instance of the DispatcherFrame class, using the specified exit request flag.
  </summary>
      <param name="exitWhenRequested">Indicates whether the current dispatcher frame will exit when all frames are requested to exit.</param>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherFrame.#ctor">
      <summary>
    Initializes a new instance of the DispatcherFrame class.
  </summary>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherFrame.Continue">
      <summary>Gets or sets a value that indicates whether the current dispatcher frame should continue.</summary>
      <returns>true if the dispatcher frame should continue; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherFrame">
      <summary>Represents an execution loop iteration in the dispatcher event queue.</summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherObject.#ctor">
      <summary>Initializes a new instance of the DispatcherObject class.</summary>
    </member>
    <member name="F:Microsoft.SPOT.DispatcherObject.Dispatcher">
      <summary>Contains the Dispatcher object that the current DispatcherObject object is associated with.
</summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherObject.CheckAccess">
      <summary>Determines whether the calling thread has access to the current DispatcherObject object. </summary>
      <returns>true if the calling thread has access to the current object; otherwise, false.
      </returns>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherObject.VerifyAccess">
      <summary>
    Determines whether the calling thread has access to the current DispatcherObject object.
  </summary>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherObject">
      <summary>Represents an object that is associated with a dispatcher.</summary>
    </member>
    <member name="E:Microsoft.SPOT.DispatcherOperation.Aborted">
      <summary>Occurs when the delegate on the dispatcher queue associated with the current DispatcherOperation object is aborted. </summary>
    </member>
    <member name="E:Microsoft.SPOT.DispatcherOperation.Completed">
      <summary>
    Occurs when the delegate on the dispatcher queue associated with the current DispatcherOperation object completes.
  </summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherOperation.Abort">
      <summary>Aborts the delegate on the dispatcher queue associated with the current DispatcherOperation object. </summary>
      <returns>true if the operation was aborted; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherOperation.Wait(System.TimeSpan)">
      <summary>Waits for a specified amount of time for the delegate on the dispatcher queue to complete. </summary>
      <param name="timeout">The maximum amount of time this method will wait.</param>
      <returns>The status of the operation.</returns>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherOperation.Wait">
      <summary>
    Waits for the delegate on the dispatcher queue associated with the current DispatcherOperation object to complete.
  </summary>
      <returns>The status of the operation.</returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherOperation.Dispatcher">
      <summary>Gets the dispatcher that the delegate associated with the current DispatcherOperation object was posted to. </summary>
      <returns>The dispatcher that the delegate was posted to. </returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherOperation.Result">
      <summary>Gets the result of the delegate associated with the current DispatcherOperation object, if the operation has completed. </summary>
      <returns>The result of the operation.</returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherOperation.Status">
      <summary>Gets the current operation status of the delegate on the dispatcher queue associated with the current DispatcherOperation object. </summary>
      <returns>The status of the operation.</returns>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherOperation">
      <summary>Enables programs to interact with a delegate that has been posted to a dispatcher queue. </summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherTimer.#ctor">
      <summary>
    Initializes a new instance of the DispatcherTimer class.
  </summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherTimer.#ctor(Microsoft.SPOT.Dispatcher)">
      <summary>
    Initializes a new instance of the DispatcherTimer class and associates it with a specified Dispatcher object.
  </summary>
      <param name="dispatcher">The dispatcher associated with the current timer.</param>
    </member>
    <member name="E:Microsoft.SPOT.DispatcherTimer.Tick">
      <summary>Occurs when the specified time interval for the current DispatcherTimer object (timer) has elapsed and the timer is enabled. </summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherTimer.Start">
      <summary>Starts a DispatcherTimer object's timer.</summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherTimer.Stop">
      <summary>
    Stops a DispatcherTimer object's timer.
  </summary>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherTimer.Dispatcher">
      <summary>Gets the Dispatcher object (dispatcher) associated with the current DispatcherTimer object (timer).</summary>
      <returns>The dispatcher associated with the current timer. </returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherTimer.Interval">
      <summary>Gets or sets the current DispatcherTimer object's defined time interval.</summary>
      <returns>The time interval between the timer's ticks, in hours:minutes:seconds. The default value is 00:00:00.</returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherTimer.IsEnabled">
      <summary>Gets or sets a Boolean value that indicates whether a particular DispatcherTimer object (timer) is enabled — that is, currently running. </summary>
      <returns>true if the timer is currently running; otherwise, false. The default value is false.
      </returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherTimer.Tag">
      <summary>Gets or sets a user-defined data object that is passed to the Tick event handler.</summary>
      <returns>
        The user-defined data object that is passed to the Tick event handler. The default value is a null reference.</returns>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherTimer">
      <summary>A timer that is integrated into a dispatcher queue. </summary>
    </member>
    <member name="M:Microsoft.SPOT.EventArgs.#ctor">
      <summary>Initializes a new instance of the EventArgs class. </summary>
    </member>
    <member name="P:Microsoft.SPOT.EventArgs.Empty">
      <summary>Gets an empty, read-only EventArgs object.
  </summary>
      <returns>An empty, read-only EventArgs object. This is equivalent to the result of calling the EventArgs constructor.</returns>
    </member>
    <member name="T:Microsoft.SPOT.EventArgs">
      <summary>Constitutes the base class for classes that contain event data. </summary>
    </member>
    <member name="M:Microsoft.SPOT.EventHandlersStore.#ctor">
      <summary>Initializes a new instance of the EventHandlersStore class.
</summary>
    </member>
    <member name="M:Microsoft.SPOT.EventHandlersStore.AddRoutedEventHandler(Microsoft.SPOT.RoutedEvent,System.Delegate,System.Boolean)">
      <summary>Adds a specified routed event handler for a specified RoutedEvent object to the collection of events in the current EventHandlersStore object. </summary>
      <param name="routedEvent">The routed event.</param>
      <param name="handler">The handler for the routed event.</param>
      <param name="handledEventsToo">A Boolean value that indicates whether the routed event handler should also process events that have already been handled.</param>
    </member>
    <member name="T:Microsoft.SPOT.EventHandlersStore">
      <summary>Provides a container for event handlers.</summary>
    </member>
    <member name="M:Microsoft.SPOT.EventRoute.#ctor(Microsoft.SPOT.RoutedEvent)">
      <summary>Initializes a new instance of the EventRoute class.
</summary>
      <param name="routedEvent">The event identifier (ID) to be associated with the current event route. Note that this parameter cannot be set to null.</param>
    </member>
    <member name="M:Microsoft.SPOT.EventRoute.Add(System.Object,System.Delegate,System.Boolean)">
      <summary>Adds a specified handler for a specified target to the event route.</summary>
      <param name="target">The target object for which a handler is to be added to the event route.</param>
      <param name="handler">The handler to be added to the event route.</param>
      <param name="handledEventsToo">A value that indicates whether or not the listener detects events that have already been handled.</param>
    </member>
    <member name="T:Microsoft.SPOT.EventRoute">
      <summary>Provides a container for a route to be followed by a routed event.</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExecutionConstraint.Install(System.Int32,System.Int32)">
      <summary>Creates a subthread within the calling thread, containing a constraint that requires the calling thread to complete an operation within a specified time period and at a specified priority level.</summary>
      <param name="timeout">The number of clock ticks before a ConstraintException exception is thrown. Note that the value -1 in this parameter indicates that the current constraint exception is to be uninstalled.</param>
      <param name="priority">The priority level of the calling thread.</param>
    </member>
    <member name="T:Microsoft.SPOT.ExecutionConstraint">
      <summary>Provides a method you can use to require a thread to complete an operation within specific constraints.</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.#ctor(System.Threading.TimerCallback,System.Object,Microsoft.SPOT.ExtendedTimer.TimeEvents)">
      <summary> Initializes a new instance of the ExtendedTimer class.</summary>
      <param name="callback">The callback method that is executed when the timer expires.</param>
      <param name="state">An object that contains application-specific information relevant to the methods invoked by the callback method, or a null reference.</param>
      <param name="ev">The event on which the callback method is to be executed.</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.#ctor(System.Threading.TimerCallback,System.Object,System.DateTime,System.TimeSpan)">
      <summary> Initializes a new instance of the ExtendedTimer class, using System.DateTime and System.TimeSpan values to measure time intervals.</summary>
      <param name="callback">The callback method that is executed when the timer expires.</param>
      <param name="state">An object that contains application-specific information relevant to the methods invoked by the callback method, or a null reference.</param>
      <param name="dueTime">The System.DateTime value that represents the amount of time the timer will wait before the callback method invokes its methods, in milliseconds. Specify System.Threading.Timeout.Infinite to prevent the timer from starting. Specify 0 (zero) to start the timer immediately.</param>
      <param name="period">The System.TimeSpan value that represents the time interval between invocations of the methods referenced by the callback method, in milliseconds. Specify System.Threading.Timeout.Infinite to disable periodic signaling.</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)">
      <summary>Initializes a new instance of the ExtendedTimer class, using System.TimeSpan values to measure time intervals.</summary>
      <param name="callback">The callback method that is executed when the timer expires.</param>
      <param name="state">An object that contains application-specific information relevant to the methods invoked by the callback method, or a null reference.</param>
      <param name="dueTime">The amount of time the timer will wait before the callback method invokes its methods, in milliseconds. Specify System.Threading.Timeout.Infinite to prevent the timer from starting. Specify 0 (zero) to start the timer immediately.</param>
      <param name="period">The time interval between invocations of the methods referenced by the callback method, in milliseconds. Specify System.Threading.Timeout.Infinite to disable periodic signaling.</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)">
      <summary> Initializes a new instance of the ExtendedTimer class, using 32-bit signed integers to measure time intervals.</summary>
      <param name="callback">The callback method that is executed when the timer expires.</param>
      <param name="state">An object that contains application-specific information relevant to the methods invoked by the callback method, or a null reference.</param>
      <param name="dueTime">The amount of time the timer will wait before the callback method invokes its methods, in milliseconds. Specify System.Threading.Timeout.Infinite to prevent the timer from starting. Specify 0 (zero) to start the timer immediately.</param>
      <param name="period">The time interval between invocations of the methods referenced by the callback method, in milliseconds. Specify System.Threading.Timeout.Infinite to disable periodic signaling.</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.Change(System.TimeSpan,System.TimeSpan)">
      <summary>Changes the start time and the interval between method invocations for a timer, using &gt;System.TimeSpan values to measure time intervals. </summary>
      <param name="dueTime">The System.TimeSpan value that represents the amount of time the timer will wait before the callback parameter invokes its methods, in milliseconds. Specify System.Threading.Timeout.Infinite to prevent the timer from starting. Specify 0 (zero) to start the timer immediately.
    </param>
      <param name="period">
      The System.TimeSpan value that represents the time interval between invocations of the methods referenced by the delegate specified at System.Threading.Timer construction time, in milliseconds. Specify System.Threading.Timeout.Infinite to disable periodic signaling.</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.Change(System.DateTime,System.TimeSpan)">
      <summary>Changes the start time and the interval between method invocations for a timer, using System.DateTime and System.TimeSpan values to measure time intervals.</summary>
      <param name="dueTime">The System.DateTime value that represents the amount of time the timer will wait before the callback parameter invokes its methods, in milliseconds. Specify System.Threading.Timeout.Infinite to prevent the timer from starting. Specify 0 (zero) to start the timer immediately.
    </param>
      <param name="period">
      The System.TimeSpan value that represents the time interval between invocations of the methods referenced by the delegate specified at System.Threading.Timer construction time, in milliseconds. Specify System.Threading.Timeout.Infinite to disable periodic signaling.</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.Change(System.Int32,System.Int32)">
      <summary>Changes the start time and the interval between method invocations for a timer, using 32-bit signed integers to measure time intervals.</summary>
      <param name="dueTime">The amount of time the timer will wait before the delegate specified at System.Threading.Timer construction time invokes its methods, in milliseconds. Specify System.Threading.Timeout.Infinite to prevent the timer from restarting. Specify 0 (zero) to restart the timer immediately.</param>
      <param name="period">The time interval between invocations of the methods referenced by the delegate specified at System.Threading.Timer construction time, in milliseconds. Specify System.Threading.Timeout.Infinite to disable periodic signaling.</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.Dispose">
      <summary>Releases all resources used by the current instance of the ExtendedTimer class.</summary>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedTimer.LastExpiration">
      <summary>Gets the System.TimeSpan value of the last expiration of the current timer.</summary>
      <returns>The System.TimeSpan value of the last expiration of the current timer.</returns>
    </member>
    <member name="T:Microsoft.SPOT.ExtendedTimer">
      <summary>Provides a mechanism for executing methods at specified intervals or on specific events.</summary>
    </member>
    <member name="F:Microsoft.SPOT.ExtendedTimeZone.c_TicksTo20030101">
      <summary>Specifies the number of clock ticks equal to the DateTime value of 2003/01/01 00:00:00.</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.GetDaylightChanges(System.Int32)">
      <summary>Finds the daylight saving time period for a specified year.</summary>
      <param name="year">The year to which the daylight saving time period applies.</param>
      <returns>A System.Globalization.DaylightTime value that contains the start and end dates for daylight saving time in the specified year.</returns>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.GetTimeZone(Microsoft.SPOT.TimeZoneId)">
      <summary>Returns a time zone for a specified time zone ID.</summary>
      <param name="id">The ID of the time zone you want to get.</param>
      <returns>A System.TimeZone value set to the time zone ID provided .</returns>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.GetUtcOffset(System.DateTime)">
      <summary>Finds the coordinated universal time (UTC) offset for the specified local time.</summary>
      <param name="time">The local date and time.</param>
      <returns>The local time for which you want the UTC offset, measured in clock ticks.</returns>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.SetTimeOffset(System.Int32)">
      <summary>Sets the time offset.</summary>
      <param name="minutes">The amount of time you want to set the device system time ahead of the true time, in minutes.</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.SetTimeZoneInfo(Microsoft.SPOT.TimeZoneInformation)">
      <summary>Sets the extended information for a particular time zone.</summary>
      <param name="timeZoneInformation">The extended information for a particular time zone.</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.SetTimeZone(Microsoft.SPOT.TimeZoneId)">
      <summary>Sets the time zone.</summary>
      <param name="id">The time zone you want to set the device system to.</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.SynchronizeWithNetworkTime(System.DateTime,System.TimeSpan,Microsoft.SPOT.TimeZoneId)">
      <summary>Synchronizes the device system time with the network time, if the device system currently has a network connection.</summary>
      <param name="startOfFrameUniversalTime">The UTC time obtained from the network.</param>
      <param name="startofFrameMachineTime">The device system time.</param>
      <param name="tzi">The ID of the time zone you want to synchronize to.</param>
      <returns>A System.TimeSpan value that is set to the difference between the network time and the device system time.</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedTimeZone.DaylightName">
      <summary>Gets the daylight saving time name for a particular time zone.</summary>
      <returns>The daylight saving time name for a particular time zone.</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedTimeZone.StandardName">
      <summary>Gets the standard name for a particular time zone.</summary>
      <returns>The standard name for a particular time zone.</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedTimeZone.TimeZoneId">
      <summary>Gets the ID of a particular time zone.</summary>
      <returns>The ID of a particular time zone.</returns>
    </member>
    <member name="T:Microsoft.SPOT.ExtendedTimeZone">
      <summary>Represents a time zone.</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedWeakReference.#ctor(System.Object,System.Type,System.UInt32,System.UInt32)">
      <summary>Initializes a new instance of the ExtendedWeakReference class, referencing a specified object.</summary>
      <param name="target">The object targeted for the current weak reference.</param>
      <param name="selector">The type that you want to associate with the current weak reference.</param>
      <param name="id">The indentifier that you want to associate with the current weak reference.</param>
      <param name="flags">Flags that specify the states from which the current weak reference should be recoverable.</param>
    </member>
    <member name="F:Microsoft.SPOT.ExtendedWeakReference.c_SurviveBoot">
      <summary>Contains a flag specifying that the current weak reference will be recoverable after the device reboots.</summary>
    </member>
    <member name="F:Microsoft.SPOT.ExtendedWeakReference.c_SurvivePowerdown">
      <summary>Contains a flag specifying that the current weak reference will be recoverable after the device powers down and restarts.</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedWeakReference.PushBackIntoRecoverList">
      <summary>Flags an ExtendedWeakReference object as a candidate for recovery after the device reboots or powers down and restarts.</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedWeakReference.RecoverOrCreate(System.Type,System.UInt32,System.UInt32)">
      <summary>Attempts to recover a specific ExtendedWeakReference object, and creates a new instance of this class if the recovery attempt fails.</summary>
      <param name="selector">The type associated with the weak reference you want to recover.</param>
      <param name="id">The ID associated with the weak reference you want to recover.</param>
      <param name="flags">The flags for the new ExtendedWeakReference object that will be created if the one you specified is not recovered.</param>
      <returns>The weak reference you specified, or a null reference if the recovery attempt failed.</returns>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedWeakReference.Recover(System.Type,System.UInt32)">
      <summary>Recovers a specific ExtendedWeakReference object.</summary>
      <param name="selector">The type associated with the weak reference you want to recover.</param>
      <param name="id">The ID associated with the weak reference you want to recover.</param>
      <returns>A weak reference, or a null reference if there are no more weak references to be recovered.</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedWeakReference.Flags">
      <summary>Gets the flags specifying the states from which the current weak reference should be recoverable.</summary>
      <returns>The recovery flags for the current weak reference.</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedWeakReference.Id">
      <summary>Gets the ID associated with the current ExtendedWeakReference object.</summary>
      <returns>The ID for the current weak reference.</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedWeakReference.Priority">
      <summary>Gets or sets the priority level for the current ExtendedWeakReference object.  </summary>
      <returns>The priority level for the current weak reference.</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedWeakReference.Selector">
      <summary>
    Gets the selector for the current ExtendedWeakReference object.</summary>
      <returns>The selector for the current weak reference.</returns>
    </member>
    <member name="T:Microsoft.SPOT.ExtendedWeakReference">
      <summary>Represents an extended weak reference, which references an object but still leaves it prone to garbage collection.</summary>
    </member>
    <member name="M:Microsoft.SPOT.FieldNoReflectionAttribute.#ctor">
      <summary>Constructs a FieldNoReflectionAttribute object.</summary>
    </member>
    <member name="T:Microsoft.SPOT.FieldNoReflectionAttribute">
      <summary>Sets a field such that there can be no reflection it.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Font.DefaultKerning">
      <summary>Contains the default kerning for a particular font.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Font.CharWidth(System.Char)">
      <summary>Gets the width of the specified character, in pixels.</summary>
      <param name="c">The character whose width you want to find.</param>
      <returns>The width of the specified character, in pixels.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Font.ComputeExtent(System.String,System.Int32@,System.Int32@,System.Int32)">
      <summary>Computes the width, height, and kerning of a specified line of text.</summary>
      <param name="text">The text you want to measure.</param>
      <param name="width">The width of the specified text.</param>
      <param name="height">The height of the specified text.</param>
      <param name="kerning">The spacing between consecutive characters.</param>
    </member>
    <member name="M:Microsoft.SPOT.Font.ComputeExtent(System.String,System.Int32@,System.Int32@)">
      <summary>Computes the width and height of a specified line of text.</summary>
      <param name="text">The text you want to measure.</param>
      <param name="width">The width of the specified text.</param>
      <param name="height">The height of the specified text.</param>
    </member>
    <member name="M:Microsoft.SPOT.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
      <summary>Computes the size of the rectangular area on the display device needed to render the specified text string.</summary>
      <param name="text">The text you want to render on the display device.</param>
      <param name="renderWidth">The width, in pixels, of the rectangular area needed to render the text.
      </param>
      <param name="renderHeight">The height, in pixels, of the rectangular area needed to render the text.
      </param>
      <param name="xRelStart">The x-coordinate of the relative starting point for the text.</param>
      <param name="yRelStart">The y-coordinate of the relative starting point for the text.</param>
      <param name="availableWidth">The maximum width of text that will fit in the defined rectangular area.</param>
      <param name="availableHeight">The maximum height of text that will fit in the defined rectangular area.</param>
      <param name="dtFlags">Flags that specify various text characteristics, such as alignment.</param>
    </member>
    <member name="M:Microsoft.SPOT.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@,System.Int32)">
      <summary>Computes the size of the rectangular area on the display device needed to render the specified text string.</summary>
      <param name="text">The text you want to render on the display device.</param>
      <param name="renderWidth">The width, in pixels, of the rectangular area needed to render the text.</param>
      <param name="renderHeight">The height, in pixels, of the rectangular area needed to render the text.</param>
      <param name="availableWidth">The maximum width of text that will fit in the defined rectangular area.</param>
    </member>
    <member name="M:Microsoft.SPOT.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@)">
      <summary>Computes the size of the rectangular area on the display device needed to render the specified text string.</summary>
      <param name="text">The text you want to render on the display device.</param>
      <param name="renderWidth">The width, in pixels, of the rectangular area needed to render the text.
      </param>
      <param name="renderHeight">The height, in pixels, of the rectangular area needed to render the text.
      </param>
    </member>
    <member name="P:Microsoft.SPOT.Font.Ascent">
      <summary>Gets the ascent measurement for the current font, in pixels.</summary>
      <returns>The ascent measurement for the current font, in pixels.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.AverageWidth">
      <summary>Gets the average width of the characters in the current font, in pixels.</summary>
      <returns>The average width of the characters in the current font, in pixels.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.Descent">
      <summary>Gets the descent measurement for the current font, in pixels.</summary>
      <returns>The descent measurement for the current font, in pixels.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.ExternalLeading">
      <summary>Gets the external leading measurement for the current font, in pixels.</summary>
      <returns>The external leading measurement for the current font, in pixels.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.Height">
      <summary>Gets the height of the current font, in pixels.</summary>
      <returns>The height of the current font, in pixels.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.InternalLeading">
      <summary>Gets the internal leading measurement for the current font, in pixels.</summary>
      <returns>The internal leading measurement for the current font, in pixels.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.MaxWidth">
      <summary>Gets the width of the widest character in the current font, in pixels.</summary>
      <returns>The width of the widest character in the current font, in pixels.</returns>
    </member>
    <member name="T:Microsoft.SPOT.Font">
      <summary>Defines a particular format for text, including font choice, font size, and style attributes.</summary>
    </member>
    <member name="T:Microsoft.SPOT.GloballySynchronizedAttribute">
      <summary>Indicates that a particular method is globally synchronized.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Logging.AppendRecord(System.Object)">
      <summary>Adds a Logging object (log record) at the end of the list of log records.</summary>
      <param name="o">The log record you want to add at the end of the list.</param>
    </member>
    <member name="M:Microsoft.SPOT.Logging.Erase">
      <summary>Erases all Logging objects (log records).</summary>
    </member>
    <member name="M:Microsoft.SPOT.Logging.GetRecord(System.Int32)">
      <summary>Gets a Logging object (log record) from the zero-based list of log records.</summary>
      <param name="i">The index number of the log record you want to retrieve.</param>
      <returns>A log record.</returns>
    </member>
    <member name="P:Microsoft.SPOT.Logging.NumberOfRecords">
      <summary>Gets the number of Logging objects (log records) in the current list of records.</summary>
      <returns>The number of log records in the current list of records.</returns>
    </member>
    <member name="T:Microsoft.SPOT.Logging">
      <summary>Provides methods and properties for managing logged data.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Math.Cos(System.Int32)">
      <summary>Gets the cosine of the specified angle.</summary>
      <param name="angle">An angle, measured in degrees.</param>
      <returns>The cosine of the specified angle, multiplied by 1000.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Math.Randomize">
      <summary>Sets a random starting point for random number generation.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Math.Random(System.Int32)">
      <summary>Generates a pseudorandom number.</summary>
      <param name="modulo">A modulo to apply to the pseudorandom number that is generated. Note that the generated number is greater than or equal to 0 (zero) and less than the modulo.</param>
      <returns>A pseudorandom number.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Math.Sin(System.Int32)">
      <summary>Gets the sine of the specified angle.</summary>
      <param name="angle">An angle, measured in degrees.</param>
      <returns>The sine of the specified angle, multiplied by 1000.</returns>
    </member>
    <member name="T:Microsoft.SPOT.Math">
      <summary>Provides static methods for common mathematical functions.</summary>
    </member>
    <member name="M:Microsoft.SPOT.PropertyChangedEventArgs.#ctor(System.String,System.Object,System.Object)">
      <summary>Initializes a new instance of the PropertyChangedEventArgs class.
</summary>
      <param name="property">The name of the property that changes.</param>
      <param name="oldValue">The value of the specified property before the change.</param>
      <param name="newValue">The value of the specified property after the change.</param>
    </member>
    <member name="F:Microsoft.SPOT.PropertyChangedEventArgs.NewValue">
      <summary>Contains the value of the specified property after the change.</summary>
    </member>
    <member name="F:Microsoft.SPOT.PropertyChangedEventArgs.OldValue">
      <summary>Contains the value of the specified property before the change.</summary>
    </member>
    <member name="F:Microsoft.SPOT.PropertyChangedEventArgs.Property">
      <summary>Contains the name of the property that changes.</summary>
    </member>
    <member name="T:Microsoft.SPOT.PropertyChangedEventArgs">
      <summary>Provides data for a property changed event.</summary>
    </member>
    <member name="M:Microsoft.SPOT.PublishInApplicationDirectoryAttribute.#ctor">
      <summary>Creates and initializes a new instance of the PublishInApplicationDirectoryAttribute class.</summary>
    </member>
    <member name="T:Microsoft.SPOT.PublishInApplicationDirectoryAttribute">
      <summary>Indicates that an application should be published in its application directory.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.#ctor">
      <summary>Creates and initializes a new instance of the Reflection class.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.Deserialize(System.Byte[],System.Type)">
      <summary>Deserializes a byte array of data into an object of the specified type.</summary>
      <param name="v">A byte array containing data that represents the serialized object.</param>
      <param name="t">The type of the object to be deserialized. This should be a null reference if the array in the v parameter contains that type.</param>
      <returns>The deserialized object represented by the byte array.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblies">
      <summary>Gets all known assemblies.</summary>
      <returns>An array containing all known assemblies.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblyFromHash(System.UInt32)">
      <summary>Gets the assembly with the specified hash attribute.</summary>
      <param name="hash">The hash attribute for the assembly you want to get.</param>
      <returns>The assembly with the specified hash attribute.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblyHash(System.Reflection.Assembly)">
      <summary>Retrieves the hash attribute from a specified assembly.</summary>
      <param name="assm">The assembly you want to retrieve the hash attribute from.</param>
      <returns>The hash attribute that represents the specified assembly.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblyInfo(System.Byte[],Microsoft.SPOT.Reflection.AssemblyInfo)">
      <summary>Get an AssemblyInfo object from a byte array that represents a specified assembly.</summary>
      <param name="assm">The byte array that represents the specified assembly.</param>
      <param name="ai">The assembly to be populated with data extracted from the byte array.</param>
      <returns>true if the AssemblyInfo object contains valid data extracted from the byte array; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblyLastUse(System.Reflection.Assembly)">
      <summary>Gets a System.TimeSpan value that represents the time at which the specified assembly was last used.</summary>
      <param name="assm">The specified assembly.</param>
      <returns>The time at which the specified assembly was last used.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblyPatch(System.Reflection.Assembly)">
      <summary>Gets the assembly that is designated as a patch for the specified assembly.</summary>
      <param name="assm">The specified assembly.</param>
      <returns>The patch assembly for the specified assembly.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetTypeFromHash(System.UInt32)">
      <summary>Gets the type that uses the specified hash attribute.</summary>
      <param name="hash">The hash attribute for the specified type.</param>
      <returns>The type that corresponds to the specified hash attribute.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetTypeHash(System.Type)">
      <summary>Gets the hash attribute for a specified type.</summary>
      <param name="t">The type you want to retrieve the hash attribute from.</param>
      <returns>The hash attribute that represents the specified type.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetTypesImplementingInterface(System.Type)">
      <summary>Gets the System.Type objects (types) that implement the specified interface. </summary>
      <param name="itf">The type of the interface you want to search for.</param>
      <returns>An array of types.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.IsTypeLoaded(System.Type)">
      <summary>Indicates whether a specified type is loaded.</summary>
      <param name="t">The type you want to check for.</param>
      <returns>true if the specified type is loaded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.Serialize(System.Object,System.Type)">
      <summary>Serializes an object of the specified type to a byte array of data.</summary>
      <param name="o">The object you want to serialize.</param>
      <param name="t">The type of the object you want to serialize. This parameter can be a null reference.</param>
      <returns>A byte array containing data that represents the serialized object.</returns>
    </member>
    <member name="T:Microsoft.SPOT.Reflection">
      <summary>Provides information about assemblies and the types defined within them, as well as information about creating, invoking, and accessing type instances at run time.</summary>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.AssemblyInfo.#ctor">
      <summary>Creates and initializes a new instance of the AssemblyInfo class.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.m_flags">
      <summary>Contains flags that describe the current assembly.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.m_hash">
      <summary>Contains the assembly hash attribute, which is a unique identifier for the current assembly.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.m_name">
      <summary>Contains the name of the current assembly.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.c_Flags_NeedReboot">
      <summary>Contains a flag stating that after the current assembly is installed, the device must be rebooted.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.c_Flags_Patch">
      <summary>Contains a flag stating that the current assembly is a patch for another assembly.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.m_refs">
      <summary>Contains an array of references to assemblies that the current assembly is dependent on.</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.m_size">
      <summary>Specifies the size of the current assembly.</summary>
    </member>
    <member name="T:Microsoft.SPOT.Reflection.AssemblyInfo">
      <summary>Defines an AssemblyInfo object (an assembly), which is a self-describing building block of a common language runtime (CLR) application.</summary>
    </member>
    <member name="M:Microsoft.SPOT.ResourceUtility.#ctor">
      <summary>Constructs a ResourceUtility object.</summary>
    </member>
    <member name="M:Microsoft.SPOT.ResourceUtility.GetDelimitedStringResources(System.Resources.ResourceManager,System.Enum)">
      <summary>Retrieves the string representations of the specified resources.</summary>
      <param name="rm">The resource manager that contains the specified resources.</param>
      <param name="resource">An enumerated value that specifies the type of the resources for which you want to get the string representations.</param>
      <returns>The string representations of the specified resources.</returns>
    </member>
    <member name="M:Microsoft.SPOT.ResourceUtility.GetDelimitedStringResource(System.Resources.ResourceManager,System.Enum,System.Int32)">
      <summary>Retrieves the string representation of a specified resource.</summary>
      <param name="rm">The resource manager that contains the specified resource.</param>
      <param name="resource">An enumerated value that indicates the type of the specified resource.</param>
      <param name="i">The index number of the resource (in the resource manager's resource collection) for which you want to get the string representation.</param>
      <returns>The string representation of the specified resource.</returns>
    </member>
    <member name="M:Microsoft.SPOT.ResourceUtility.GetObject(System.Resources.ResourceManager,System.Enum)">
      <summary>Gets the value of a specified Object resource for the current system culture.</summary>
      <param name="rm">The resource manager that contains the specified resource.</param>
      <param name="id">The integer identifier for the specified resource.</param>
      <returns>The value of the specified resource for the current system culture.</returns>
    </member>
    <member name="M:Microsoft.SPOT.ResourceUtility.SetCurrentUICulture(System.Globalization.CultureInfo)">
      <summary>Sets the information for the current system culture.</summary>
      <param name="culture">The object that contains the information for the current system culture.</param>
    </member>
    <member name="T:Microsoft.SPOT.ResourceUtility">
      <summary>Helps .NET Micro Framework applications manage resources.</summary>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEvent.#ctor(System.String,Microsoft.SPOT.RoutingStrategy,System.Type)">
      <summary>Initializes a new instance of the RoutedEvent class.
</summary>
      <param name="name">The identifying name of the routed event.</param>
      <param name="routingStrategy">The routing strategy of the routed event. </param>
      <param name="handlerType">The handler type of the routed event.</param>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEvent.ToString">
      <summary>Retrieves a string representation of the current RoutedEvent object.</summary>
      <returns>A string representation of the current routed event. Note that this string is identical to the value returned by the Name property.</returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEvent.HandlerType">
      <summary>Gets the handler type of the current RoutedEvent object.
</summary>
      <returns>The handler type of the current routed event. </returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEvent.Name">
      <summary>Gets the identifying name of the current RoutedEvent object.</summary>
      <returns>The identifying name of the current routed event.</returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEvent.RoutingStrategy">
      <summary>Gets the routing strategy of the current Routed Event object.</summary>
      <returns>A value from the RoutingStrategy enumeration. 
      </returns>
    </member>
    <member name="T:Microsoft.SPOT.RoutedEvent">
      <summary>Represents and identifies a routed event and declares its characteristics.</summary>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEventArgs.#ctor(Microsoft.SPOT.RoutedEvent)">
      <summary>
    Initializes a new instance of the RoutedEventArgs class, using the routed event identifier that is provided.
  </summary>
      <param name="routedEvent">
        The routed event identifier for the current RoutedEventArgs object.
      </param>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEventArgs.#ctor(Microsoft.SPOT.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the RoutedEventArgs class, using the routed event identifier that is provided. Note that using this constructor also gives you the opportunity to declare a different source for the event.</summary>
      <param name="routedEvent">The routed event identifier for the current RoutedEventArgs object.</param>
      <param name="source">An alternate source that will be reported when the routed event is handled. </param>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEventArgs.#ctor">
      <summary>
    Initializes a new instance of the RoutedEventArgs class.
  </summary>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEventArgs.OnSetSource(System.Object)">
      <summary>Provides a notification callback entry point whenever the value of the Source property of an object changes. </summary>
      <param name="source">Contains the object whose Source property triggers the invocation of this method.</param>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEventArgs.Handled">
      <summary>Gets or sets a value that indicates the present state of the event handling for a particular routed event as it travels the route. </summary>
      <returns>When setting this property: true if the routed event is to be marked handled; otherwise false. When reading this property: true if a class handler or some instance handler along the route has already marked this event handled; otherwise, false. Note that the default value is false.</returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEventArgs.OriginalSource">
      <summary>
    Gets the orginal object that raised the current routed event.
  </summary>
      <returns>The original reporting source, before any possible adjustments could be made to the Source property by class handling.</returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEventArgs.RoutedEvent">
      <summary>Gets or sets a routed event.</summary>
      <returns>A routed event.</returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEventArgs.Source">
      <summary>Gets or sets a reference to the object that raised the current routed event. </summary>
      <returns>The object that raised the current routed event. </returns>
    </member>
    <member name="T:Microsoft.SPOT.RoutedEventArgs">
      <summary>Provides state information and event data associated with a particular routed event.</summary>
    </member>
    <member name="T:Microsoft.SPOT.RoutedEventHandlerInfo">
      <summary>Constructs event routes.</summary>
    </member>
    <member name="M:Microsoft.SPOT.RpcClient.#ctor(System.Type,System.UInt32)">
      <summary>Creates a new RpcClient object.</summary>
      <param name="selector">The type to initialize the RPC client with.</param>
      <param name="id">The ID to initialize the RPC client with.</param>
    </member>
    <member name="M:Microsoft.SPOT.RpcClient.Invoke(System.String,System.Object[])">
      <summary>Invokes a specified method.</summary>
      <param name="methodName">The name of the method to invoke.</param>
      <param name="args">The parameters to the method to invoke.</param>
      <returns>The return value of the method that is invoked.</returns>
    </member>
    <member name="P:Microsoft.SPOT.RpcClient.Name">
      <summary>Gets a Boolean value that indicates whether or not the RPC server is alive.</summary>
      <returns>true if the server is alive; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SPOT.RpcClient">
      <summary>Provides a client for remote procedure calls.</summary>
    </member>
    <member name="M:Microsoft.SPOT.RpcServer.#ctor(System.Type,System.UInt32,System.Object,System.Type)">
      <summary>Creates a new RpcServer object.</summary>
      <param name="selector">The type to initialize the RPC server with.</param>
      <param name="id">The ID to initialize the RPC server with.</param>
      <param name="target">The target of the RPC server.</param>
      <param name="remotedMethods">The type of the remoted methods.</param>
    </member>
    <member name="M:Microsoft.SPOT.RpcServer.Start">
      <summary>Starts the RPC Server.</summary>
    </member>
    <member name="M:Microsoft.SPOT.RpcServer.Stop">
      <summary>Stops the RPC Server.</summary>
    </member>
    <member name="T:Microsoft.SPOT.RpcServer">
      <summary>Provides a server for remote procedure calls.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SerializationHintsAttribute.ArraySize">
      <summary>Specifies the size of a particular serialized array.  </summary>
    </member>
    <member name="F:Microsoft.SPOT.SerializationHintsAttribute.BitPacked">
      <summary>Specifies the number of bits in which the current object is bit-packed.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SerializationHintsAttribute.Flags">
      <summary>Contains flags that describe the serialization of the current object.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SerializationHintsAttribute.RangeBias">
      <summary>Specifies the range bias adjustment for a particular serialized value.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SerializationHintsAttribute.Scale">
      <summary>Specifies the scale adjustment for a particular serialized value.</summary>
    </member>
    <member name="T:Microsoft.SPOT.SerializationHintsAttribute">
      <summary>Indicates that a particular serializable object has known attributes and methods of serialization.</summary>
    </member>
    <member name="T:Microsoft.SPOT.Socket">
      <summary>For internal use only. Please use Socket instead.</summary>
    </member>
    <member name="M:Microsoft.SPOT.SystemTime.#ctor">
      <summary>Constructs a SystemTime object.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.DayOfWeek">
      <summary>Specifies the day of the week associated with a particular SystemTime object.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Day">
      <summary>Specifies the day associated with a particular SystemTime object.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Hour">
      <summary>Specifies the hour associated with a particular SystemTime object.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Milliseconds">
      <summary>Specifies the milliseconds associated with a particular SystemTime object.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Minute">
      <summary>Specifies the minute associated with a particular SystemTime object.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Month">
      <summary>Specifies the month associated with a particular SystemTime object.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Second">
      <summary>Specifies the second associated with a particular SystemTime object.</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Year">
      <summary>Specifies the year associated with a particular SystemTime object.</summary>
    </member>
    <member name="T:Microsoft.SPOT.SystemTime">
      <summary>Sets or gets the current system time for the device.</summary>
    </member>
    <member name="M:Microsoft.SPOT.TimeZoneInformation.#ctor">
      <summary>Constructs a TimeZoneInformation object.</summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.Bias">
      <summary>Specifies the current bias for local time translation on this operating system, in minutes. </summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.DaylightBias">
      <summary>Specifies the bias value to be used for local time translations that occur during daylight saving time in a particular time zone.  </summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.DaylightDate">
      <summary>Specifies a date and a local time when the transition from standard time to daylight saving time will occur on this operating system.</summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.DaylightName">
      <summary>Contains a description of daylight saving time.</summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.StandardBias">
      <summary>Specifies the bias value to be used for local time translations that occur during standard time in a particular time zone. </summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.StandardDate">
      <summary>Contains a date and a local time when the transition from daylight saving time to standard time will occur on this operating system.</summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.StandardName">
      <summary>Contains a description of standard time.</summary>
    </member>
    <member name="T:Microsoft.SPOT.TimeZoneInformation">
      <summary>Contains information describing a specific time zone.</summary>
    </member>
    <member name="F:Microsoft.SPOT.UnknownTypeException.m_type">
      <summary>Contains a reference to the unknown type that caused the current exception.</summary>
    </member>
    <member name="T:Microsoft.SPOT.UnknownTypeException">
      <summary>The exception that is thown when an error occurs because of an unknown type.</summary>
    </member>
    <member name="M:Microsoft.SPOT.WeakDelegate.#ctor">
      <summary>Creates and initializes an instance of the WeakDelegate class.</summary>
    </member>
    <member name="M:Microsoft.SPOT.WeakDelegate.Combine(System.Delegate,System.Delegate)">
      <summary>Concatenates the invocation lists of two multicast (combinable) delegates.</summary>
      <param name="a">The combinable delegate whose invocation list comes first.</param>
      <param name="b">The combinable delegate whose invocation list comes second.</param>
      <returns>A new combinable delegate with an invocation list that concatenates the invocation lists of the a and b parameters, in that order. If b is a null reference, this method returns a. If a is a null reference, this method returns b. If both a and b are null references, this method returns null.
            </returns>
    </member>
    <member name="M:Microsoft.SPOT.WeakDelegate.Remove(System.Delegate,System.Delegate)">
      <summary>Removes the invocation list of a specified delegate from the invocation list of another specified delegate.</summary>
      <param name="a">The delegate from which you want to remove the invocation list.</param>
      <param name="b">The delegate that supplies the invocation list you want to remove from the delegate specified in a.</param>
      <returns>A new delegate with an invocation list formed by taking the invocation list of the a parameter and removing the invocation list of the b parameter, if b's invocation list is found
        in a's invocation list. If b is a null reference, or if b's invocation list is not found in a's invocation list, this method returns a. If b's invocation list is equal to a's invocation list, or if b is a null reference, this method returns null.</returns>
    </member>
    <member name="T:Microsoft.SPOT.WeakDelegate">
      <summary>Provides methods for combining and removing "weak" delegates.</summary>
    </member>
    <member name="M:Microsoft.SPOT.WindowCollection.#ctor">
      <summary>Initializes a new instance of the WindowCollection class. </summary>
    </member>
    <member name="M:Microsoft.SPOT.WindowCollection.CopyTo(Microsoft.SPOT.Presentation.Window[],System.Int32)">
      <summary>
    Copies Window objects from a window collection to a specified array, starting at a specified index number in the window collection.
  </summary>
      <param name="array">
        An array of Window objects that is the destination of the copy operation.
      </param>
      <param name="index">The starting index number in the window collection where copying is to begin.</param>
    </member>
    <member name="M:Microsoft.SPOT.WindowCollection.GetEnumerator">
      <summary>Returns an IEnumerator interface that your program can use to enumerate the Window objects in a window collection.</summary>
      <returns>An IEnumerator interface that your program can use to enumerate the Window objects in a window collection.</returns>
    </member>
    <member name="P:Microsoft.SPOT.WindowCollection.Count">
      <summary>
    Gets the number of Window objects in a particular window collection.
  </summary>
      <returns>An integer that specifies the number of Window objects in the window collection.
    </returns>
    </member>
    <member name="P:Microsoft.SPOT.WindowCollection.IsSynchronized">
      <summary>Gets a value that indicates whether a particular window collection is thread-safe.</summary>
      <returns>true if the window collection is thread-safe; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SPOT.WindowCollection.Item">
      <summary>Gets the Window object at a specified index number in a particular window collection.</summary>
      <returns>The Window object at the specified index number in the window collection.</returns>
    </member>
    <member name="P:Microsoft.SPOT.WindowCollection.SyncRoot">
      <summary>Gets an object that you can use to synchronize access to a particular window collection. </summary>
      <returns>An object that you can use to synchronize access to the window collection.</returns>
    </member>
    <member name="T:Microsoft.SPOT.WindowCollection">
      <summary>Collects the window objects for an application into a single set, or window collection.</summary>
    </member>
    <member name="T:Microsoft.SPOT.CancelEventHandler">
      <summary>Provides the method that handles a cancelable event.</summary>
      <param name="sender">The sender (source) of the event.</param>
      <param name="e">Data describing the event.</param>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherOperationCallback">
      <summary>Provides callback functionality for dispatcher operations. </summary>
      <param name="arg">An argument that is passed to the callback method. The value of this parameter can be null.</param>
      <returns>The object returned by the callback method. This value can be null.
    </returns>
    </member>
    <member name="T:Microsoft.SPOT.EventHandler">
      <summary>Provides a method that handles events that have no event data.</summary>
      <param name="sender">The sender (source) of the event.</param>
      <param name="e">A parameter that contains no event data. </param>
    </member>
    <member name="T:Microsoft.SPOT.PropertyChangedEventHandler">
      <summary>Handles a property change event.</summary>
      <param name="sender">The object whose property is changing.</param>
      <param name="e">Information about the property change.</param>
    </member>
    <member name="T:Microsoft.SPOT.RoutedEventHandler">
      <summary>Represents an event handler that receive a routed event.</summary>
      <param name="sender">The sender of the routed event.</param>
      <param name="e">Event arguments that contain information about the routed event.
      </param>
    </member>
    <member name="T:Microsoft.SPOT.Bitmap.BitmapImageType">
      <summary>Lists the available formats for bitmap images.</summary>
      <param name="Bmp">A bitmap in Windows BMP format.</param>
      <param name="Gif">A bitmap in GIF format.</param>
      <param name="Jpeg">A bitmap in JPEG format.</param>
      <param name="TinyCLRBitmap">A bitmap in a format specific to the .NET Micro Framework common language runtine (CLR).</param>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherOperationStatus">
      <summary>Describes the possible values for the status of a DispatcherOperation object.</summary>
      <param name="Aborted">A value indicating that the operation has aborted. </param>
      <param name="Completed">A value indicating that the operation has completed.  </param>
      <param name="Executing">A value indicating that the operation has started executing but has not completed. </param>
      <param name="Pending">A value indicating that the operation is pending.</param>
    </member>
    <member name="T:Microsoft.SPOT.ExtendedWeakReference.PriorityLevel">
      <summary>Defines a set of constants available for prioritizing extended weak references.</summary>
      <param name="Critical">Critical data.</param>
      <param name="Important">Data that is important, but not critical.</param>
      <param name="NiceToHave">Data that is nice to have, but not critical.</param>
      <param name="OkayToThrowAway">Data that can be safely thrown away.</param>
      <param name="System">System data that is mandatory for basic operation.</param>
    </member>
    <member name="T:Microsoft.SPOT.ReasonSessionEnding">
      <summary>Specifies the reason for the end of the session. </summary>
      <param name="Logoff">A value specifying that the user has logged off.</param>
      <param name="Shutdown">A value specifying that the user has shut the system down.</param>
    </member>
    <member name="T:Microsoft.SPOT.RoutingStrategy">
      <summary>Indicates the routing strategy of a routed event. </summary>
      <param name="Bubble">A value indicating that the event uses a "bubbling" strategy, in which the event instance moves up the tree.</param>
      <param name="Direct">A value indicating that the event does not support routing.  </param>
      <param name="Tunnel">A value indicating that the event uses a "tunneling" strategy, in which the event instance moves down the tree.</param>
    </member>
    <member name="T:Microsoft.SPOT.SerializationFlags">
      <summary>Defines a set of flags that indicate various attributes of a serialization (serialized object).</summary>
      <param name="Compressed">A value indicating that the serialized object is compressed. This flag is not currently implemented.</param>
      <param name="DemandTrusted">This flag is not currently implemented.</param>
      <param name="ElementsNeverNull">A value indicating that the elements in the serialized object are never null.</param>
      <param name="Encrypted">A value indicating that the serialized object is encrypted. This flag is not currently implemented.</param>
      <param name="FixedType">A value indicating that the serialized object can only be an instance of the specified class, and not an instance of a derived class.</param>
      <param name="Optional">A value indicating that the serialized object can be skipped if it cannot be deserialized. This flag is not currently implemented.</param>
      <param name="PointerNeverNull">A value indicating that the pointer to the serialized object is never null.</param>
    </member>
    <member name="T:Microsoft.SPOT.ShutdownMode">
      <summary>Defines how an application shuts down.</summary>
      <param name="OnExplicitShutdown">A value that causes the application to shut down when your program explicitly calls the Application.Shutdown method.</param>
      <param name="OnLastWindowClose">A value that causes the application to shut down when the last window closes or when your program explicitly calls the Application.Shutdown method. Note that this is the default setting.</param>
      <param name="OnMainWindowClose">A value that causes the application to shut down when the main window closes or when your program explicitly calls the Application.Shutdown method.</param>
    </member>
    <member name="T:Microsoft.SPOT.ExtendedTimer.TimeEvents">
      <summary>Defines the various timer events that are available in the .NET Micro Framework.</summary>
      <param name="Day">An event that occurs on a change in days.</param>
      <param name="Hour">An event that occurs on a change in hours.</param>
      <param name="Minute">An event that occurs on a change in minutes.</param>
      <param name="Second">An event that occurs on a change in seconds.</param>
      <param name="SetTime">An event that occurs at a specified time.</param>
      <param name="TimeZone">An event that occurs on a change in time zones.</param>
    </member>
    <member name="T:Microsoft.SPOT.TimeZoneId">
      <summary>Provides the set of time zones that are available for .NET Micro Framework applications.</summary>
      <param name="AbuDhabi">Abu Dhabi</param>
      <param name="Adelaide">Adelaide</param>
      <param name="Alaska">Alaska</param>
      <param name="Almaty">Almaty</param>
      <param name="Arizona">Arizona</param>
      <param name="Astana">Astana</param>
      <param name="Athens">Athens</param>
      <param name="Atlantic">Atlantic</param>
      <param name="Azores">Azores</param>
      <param name="Baghdad">Baghdad</param>
      <param name="Baku">Baku</param>
      <param name="Bangkok">Bangkok</param>
      <param name="Beijing">Beijing</param>
      <param name="Berlin">Berlin</param>
      <param name="Bogota">Bogota</param>
      <param name="Brasilia">Brasilia</param>
      <param name="Brisbane">Brisbane</param>
      <param name="Bucharest">Bucharest</param>
      <param name="BuenosAires">Buenos Aires</param>
      <param name="Cairo">Cairo</param>
      <param name="CapeVerde">Cape Verde</param>
      <param name="Caracas">Caracas</param>
      <param name="Casablanca">Casablanca</param>
      <param name="CentAmerica">Central America</param>
      <param name="Central">Central</param>
      <param name="COUNT">The total number of time zone IDs</param>
      <param name="Current">The current time zone ID</param>
      <param name="Darwin">Darwin</param>
      <param name="Dateline">A string resource</param>
      <param name="Eastern">Eastern</param>
      <param name="FijiIslands">Fiji Islands</param>
      <param name="FIRST">The first time zone ID</param>
      <param name="FIRST_RESOURCE">The first resource string</param>
      <param name="GMT">GMT, or Greenwich Mean Time (also known as UTC, or Coordinated Universal Time)</param>
      <param name="Greenland">Greenland</param>
      <param name="Guam">Guam</param>
      <param name="Hawaii">Hawaii</param>
      <param name="Helsinki">Helsinki</param>
      <param name="Hobart">Hobart</param>
      <param name="Indiana">Indiana</param>
      <param name="Islamabad">Islamabad</param>
      <param name="Jerusalem">Jerusalem</param>
      <param name="Kabul">Kabul</param>
      <param name="Kathmandu">Kathmandu</param>
      <param name="Krasnoyarsk">Krasnoyarsk</param>
      <param name="LAST">The last time zone ID</param>
      <param name="London">London</param>
      <param name="Magadan">Magadan</param>
      <param name="Malaysia">Malaysia</param>
      <param name="MexicoCity">Mexico City</param>
      <param name="MidAtlantic">Mid-Atlantic</param>
      <param name="Moscow">Moscow</param>
      <param name="Mountain">Mountain</param>
      <param name="Nairobi">Nairobi</param>
      <param name="Network">The network-provided time zone</param>
      <param name="NewDelhi">New Delhi</param>
      <param name="Newfoundland">Newfoundland</param>
      <param name="NewZealand">New Zealand</param>
      <param name="Pacific">Pacific</param>
      <param name="Paris">Paris</param>
      <param name="Perth">Perth</param>
      <param name="Prague">Prague</param>
      <param name="Pretoria">Pretoria</param>
      <param name="Riyadh">Riyadh</param>
      <param name="Samoa">Samoa</param>
      <param name="Santiago">Santiago</param>
      <param name="Saskatchewan">Saskatchewan</param>
      <param name="Seoul">Seoul</param>
      <param name="SriLanka">Sri Lanka</param>
      <param name="Sydney">Sydney</param>
      <param name="Taipei">Taipei</param>
      <param name="Tehran">Tehran</param>
      <param name="Tokyo">Tokyo</param>
      <param name="Tonga">Tonga</param>
      <param name="Ulaanbataar">Ulaanbataar</param>
      <param name="Vladivostok">Vladivostok</param>
      <param name="Warsaw">Warsaw</param>
      <param name="WCentAfrica">West Central Africa</param>
      <param name="Yakutsk">Yakutsk</param>
      <param name="Yangon">Yangon</param>
      <param name="Yekaterinburg">Yekaterinburg</param>
    </member>
    <member name="M:Microsoft.SPOT.Application.#ctor">
      <summary>Application クラスの新規インスタンスを初期化します。 </summary>
    </member>
    <member name="E:Microsoft.SPOT.Application.Exit">
      <summary>アプリケーションが終了する直前に発生します。 </summary>
    </member>
    <member name="E:Microsoft.SPOT.Application.Startup">
      <summary>Application オブジェクトの Run メソッドが呼び出されると発生します。 </summary>
    </member>
    <member name="M:Microsoft.SPOT.Application.OnExit(Microsoft.SPOT.EventArgs)">
      <summary>Exit イベントを発生させます。</summary>
      <param name="e">Exit イベントのイベント データが含まれた EventArgs オブジェクト。</param>
    </member>
    <member name="M:Microsoft.SPOT.Application.OnStartup(Microsoft.SPOT.EventArgs)">
      <summary>Startup イベントを発生させます。 </summary>
      <param name="e">Startup イベントのイベント データが含まれた EventArgs オブジェクト。</param>
    </member>
    <member name="M:Microsoft.SPOT.Application.Run(Microsoft.SPOT.Presentation.Window)">
      <summary>Windows Presentation Foundation (WPF) アプリケーションを起動し、指定されたウィンドウを開きます。 </summary>
      <param name="window">WPF アプリケーションの動作開始時に自動的に開くウィンドウを表す Window オブジェクト。</param>
    </member>
    <member name="M:Microsoft.SPOT.Application.Run">
      <summary>Windows Presentation Foundation (WPF) アプリケーションを起動します。 </summary>
    </member>
    <member name="M:Microsoft.SPOT.Application.Shutdown">
      <summary>アプリケーションを終了させます。 </summary>
    </member>
    <member name="P:Microsoft.SPOT.Application.Current">
      <summary>現在のアプリケーション ドメインの Application オブジェクトを取得します。
</summary>
      <returns>
現在の AppDomain オブジェクトの Application オブジェクト。
      </returns>
    </member>
    <member name="P:Microsoft.SPOT.Application.MainWindow">
      <summary>現在のアプリケーションのメイン ウィンドウを取得または設定します。 </summary>
      <returns>現在のアプリケーションのメイン ウィンドウを表す Window オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Application.ShutdownMode">
      <summary>Shutdown メソッドが呼び出される条件を取得または設定します。</summary>
      <returns>ShutdownMode 列挙型の値。既定の戻り値は、OnLastWindowClose です。 </returns>
    </member>
    <member name="P:Microsoft.SPOT.Application.Windows">
      <summary>現在のアプリケーション内の、インスタンスが作成されたウィンドウを取得します。</summary>
      <returns>
現在のアプリケーション内のすべてのウィンドウ オブジェクトへの参照を含む WindowCollection オブジェクト。
      </returns>
    </member>
    <member name="T:Microsoft.SPOT.Application">
      <summary>Windows Presentation Foundation (WPF) アプリケーションをカプセル化します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.#ctor(System.Byte[],Microsoft.SPOT.Bitmap.BitmapImageType)">
      <summary>Bitmap クラスの新規インスタンスを、指定された高さと幅に初期化します。</summary>
      <param name="imageData">指定されたイメージのピクセル データの配列。</param>
      <param name="type">指定されたイメージのビットマップ型。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>Bitmap クラスの新規インスタンスを、指定された高さと幅に初期化します。</summary>
      <param name="width">現在のビットマップの幅。ピクセル単位。</param>
      <param name="height">現在のビットマップの高さ。ピクセル単位。</param>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_AlignmentCenter">
      <summary>テキストがビットマップの周囲に中央揃えで表示されるように指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_AlignmentLeft">
      <summary>テキストがビットマップの周囲に左揃えで表示されるように指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_AlignmentMask">
      <summary>マスクを使用して、ビットマップ周囲のテキスト揃えを取得または設定できるように指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_AlignmentRight">
      <summary>テキストがビットマップの周囲に右揃えで表示されるように指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.BLACKNESS">
      <summary>コピー先四角形を、物理パレットのインデックス番号 0 と関連付けられている色で塗りつぶします。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.CenterX">
      <summary>表示デバイスの中心となる x 座標の位置をピクセル単位で表します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.CenterY">
      <summary>表示デバイスの中心となる y 座標の位置をピクセル単位で表します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DSTDKGRAY">
      <summary>コピー先の四角形を濃い灰色で塗りつぶします。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DSTGRAY">
      <summary>コピー先の四角形を灰色で塗りつぶします。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DSTINVERT">
      <summary>コピー先の四角形を反転させます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DSTLTGRAY">
      <summary>コピー先の四角形を薄い灰色で塗りつぶします。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_Ellipsis">
      <summary>ビットマップのテキストが最も近い文字にトリムされ、トリムされた各行の末尾に省略記号が挿入されるよう指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_IgnoreHeight">
      <summary>ビットマップ テキストが提供されている領域より大きい場合、テキストを Height プロパティの値に合わせて縮小するのではなく、フル サイズで描画することを指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.MaxHeight">
      <summary>ディスプレイ デバイスの最大高さ (ピクセル単位) を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.MaxWidth">
      <summary>ディスプレイ デバイスの最大幅 (ピクセル単位) を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_None">
      <summary>書式ルールが存在しないことを指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.OpacityOpaque">
      <summary>現在のビットマップが不透明であることを指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.OpacityTransparent">
      <summary>現在のビットマップが透明であることを指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.PATINVERT">
      <summary>ソースの四角形を反転させます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.RANDOM">
      <summary>コピー先の四角形または円を、ランダムに生成されたパターンで塗りつぶします。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.SINGLEPIXEL">
      <summary>円は単一ピクセルの境界線のみを持つべきであり、塗りつぶしパターンや色を持つべきでないことを指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.SRCCOPY">
      <summary>コピー元四角形をコピー先四角形に直接コピーします。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_TruncateAtBottom">
      <summary>
ビットマップ テキストが提供された領域より大きい場合、テキストを末尾で切り捨てることを指定します。
  </summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.WHITENESS">
      <summary>コピー先四角形を、物理パレットのインデックス番号 1 と関連付けられている色で塗りつぶします。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Bitmap.DT_WordWrap">
      <summary>ビットマップ テキストの行がその最大幅に達したとき、次の行の先頭に単語を自動的にラップするかどうか指定します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.BitBlt(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32,System.Int32)">
      <summary>四角形のピクセルに対応するビットマップ データのビットブロック転送を実行し、指定されたコピー元ビットマップから現在のコピー先ビットマップにデータを転送します。</summary>
      <param name="xDst">コピー先四角形の左上隅の x 座標。</param>
      <param name="yDst">コピー先四角形の左上隅の y 座標。</param>
      <param name="nWidth">コピー元およびコピー先の四角形の幅。</param>
      <param name="nHeight">コピー元およびコピー先の四角形の高さ。</param>
      <param name="pSrc">コピー元のビットマップ。</param>
      <param name="xSrc">コピー元四角形の左上隅の x 座標。</param>
      <param name="ySrc">コピー元四角形の左上隅の y 座標。</param>
      <param name="dwRop">ラスタ操作コード。このコードは、コピー元四角形のビットマップ データを、コピー先四角形のビットマップ データにどのように結合するかを定義します。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.Circle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定されたラスタ操作によって、座標の組 (x および y) と半径で指定された円を描画します。</summary>
      <param name="xCenter">円の中心の x 座標。</param>
      <param name="yCenter">円の中心の y 座標。</param>
      <param name="radius">円の半径。</param>
      <param name="dwRop">ラスタ操作コード。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.Clear">
      <summary>描画サーフェイス全体をクリアします。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawEllipse(Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>ディスプレイ デバイス上に塗りつぶされた楕円を描画します。</summary>
      <param name="colorOutline">輪郭線の色。</param>
      <param name="x">楕円の中心の x 座標の位置。</param>
      <param name="y">楕円の中心の y 座標の位置。</param>
      <param name="xRadius">x 座標方向の楕円の半径。</param>
      <param name="yRadius">y 座標方向の楕円の半径。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawEllipse(Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.Double)">
      <summary>指定された色のグラデーションで塗りつぶされた楕円を描画します。</summary>
      <param name="colorOutline">輪郭線の色。</param>
      <param name="thicknessOutline">楕円の輪郭線の太さ (ピクセル単位)。</param>
      <param name="x">楕円の中心の x 座標の位置。</param>
      <param name="y">楕円の中心の y 座標の位置。</param>
      <param name="xRadius">x 座標方向の楕円の半径。</param>
      <param name="yRadius">y 座標方向の楕円の半径。</param>
      <param name="colorGradientStart">色のグラデーションの開始色。</param>
      <param name="xGradientStart">色のグラデーションの開始点の x 座標の位置。</param>
      <param name="yGradientStart">色のグラデーションの開始点の y 座標の位置。</param>
      <param name="colorGradientEnd">色のグラデーションの終了色。</param>
      <param name="xGradientEnd">色のグラデーションの終了点の x 座標の位置。</param>
      <param name="yGradientEnd">色のグラデーションの終了点の y 座標の位置。</param>
      <param name="opacity">楕円の不透明度。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawImage(System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt16)">
      <summary>指定された透明度で、四角形ブロックのピクセルを描画します。</summary>
      <param name="xDst">指定されたピクセルがコピーされる、ディスプレイ上の四角形領域の左上隅 x 座標の位置。</param>
      <param name="yDst">指定されたピクセルがコピーされる、ディスプレイ上の四角形領域の左上隅 y 座標の位置。</param>
      <param name="bitmap">コピー元のビットマップ。</param>
      <param name="xSrc">指定されたピクセルがコピーされる、コピー元ビットマップ内の四角形領域の左上隅 x 座標の位置。</param>
      <param name="ySrc">指定されたピクセルがコピーされる、コピー元ビットマップ内の四角形領域の左上隅 x 座標の位置。</param>
      <param name="width">コピーされるピクセルの四角形ブロックの幅。</param>
      <param name="height">コピーされるピクセルの四角形ブロックの高さ。</param>
      <param name="opacity">ビットマップの不透明度。値が 0 (ゼロ) の場合、ビットマップは完全に不透明 (まったく非透過的) になります。値が 255 の場合、ビットマップは完全に透過になります。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawImage(System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>ディスプレイ デバイス上に四角形ブロックのピクセルを描画します。</summary>
      <param name="xDst">指定されたピクセルがコピーされる、ディスプレイ上の四角形領域の左上隅 x 座標の位置。</param>
      <param name="yDst">指定されたピクセルがコピーされる、ディスプレイ上の四角形領域の左上隅 y 座標の位置。</param>
      <param name="bitmap">コピー元のビットマップ。</param>
      <param name="xSrc">指定されたピクセルがコピーされる、コピー元ビットマップ内の四角形領域の左上隅 x 座標の位置。</param>
      <param name="ySrc">指定されたピクセルがコピーされる、コピー元ビットマップ内の四角形領域の左上隅 y 座標の位置。</param>
      <param name="width">コピーされるピクセルの四角形ブロックの幅。</param>
      <param name="height">コピーされるピクセルの四角形ブロックの高さ。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawLine(Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>ディスプレイ デバイス上に線を描画します。</summary>
      <param name="color">線の色。</param>
      <param name="thickness">線の太さ。ピクセル単位。</param>
      <param name="x0">線の開始点の x 座標の位置。</param>
      <param name="y0">線の開始点の y 座標の位置。</param>
      <param name="x1">線の終了点の x 座標の位置。</param>
      <param name="y1">線の終了点の y 座標の位置。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>2 つの座標 (x、y) の組で定義される四角形を描画します。</summary>
      <param name="x1">四角形の左上隅の x 座標。</param>
      <param name="y1">四角形の左上隅の y 座標。</param>
      <param name="x2">四角形の右下隅の x 座標。</param>
      <param name="y2">四角形の右下隅の y 座標。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawRectangle(Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32,System.UInt16)">
      <summary>ディスプレイ デバイス上に四角形を描画します。</summary>
      <param name="colorOutline">四角形の輪郭線の色。</param>
      <param name="thicknessOutline">四角形の輪郭線の太さ (ピクセル単位)。</param>
      <param name="x">四角形の左上隅の x 座標。</param>
      <param name="y">四角形の左上隅の y 座標。</param>
      <param name="width">四角形の幅。ピクセル単位。</param>
      <param name="height">四角形の高さ。ピクセル単位。</param>
      <param name="xCornerRadius">四角形の角を丸くするために使用される角の半径の x 座標の値。</param>
      <param name="yCornerRadius">四角形の角を丸くするために使用される角の半径の y 座標の値。</param>
      <param name="colorGradientStart">色のグラデーションの開始色。</param>
      <param name="xGradientStart">色のグラデーションの開始位置の x 座標を保持します。</param>
      <param name="yGradientStart">色のグラデーションの開始位置の y 座標を保持します。</param>
      <param name="colorGradientEnd">色のグラデーションの終了色を指定します。</param>
      <param name="xGradientEnd">色のグラデーションの終了位置の x 座標を保持します。</param>
      <param name="yGradientEnd">色のグラデーションの終了位置の y 座標を保持します。</param>
      <param name="opacity">塗りつぶしの色の不透明度を指定します。完全に透過的にするには、0x00 に設定します。完全に不透明にするには、0xFF に設定します。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawTextInRect(System.String@,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,Microsoft.SPOT.Presentation.Media.Color,Microsoft.SPOT.Font)">
      <summary>指定された四角形内にテキストを描画します。</summary>
      <param name="text">描画されるテキスト。完全な文字列が指定された四角形内に収まらなかった場合、このパラメータには、残りのテキスト、または空の文字列が含まれます。</param>
      <param name="xRelStart">テキスト描画の開始場所の x 座標 (四角形との相対座標)。</param>
      <param name="yRelStart">テキスト描画の開始場所の y 座標 (四角形との相対座標)。</param>
      <param name="x">四角形の左上隅の x 座標。</param>
      <param name="y">四角形の左上隅の y 座標。</param>
      <param name="width">四角形の幅。</param>
      <param name="height">四角形の高さ。</param>
      <param name="dtFlags">テキストの形式を指定するフラグ。</param>
      <param name="color">テキストに使用される色。</param>
      <param name="font">テキストに使用されるフォント。</param>
      <returns>指定されたテキストがすべて描画された場合、true。それ以外の場合で、描画されなかった残りのテキストが text パラメータに含まれている場合、false。
      </returns>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawTextInRect(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,Microsoft.SPOT.Presentation.Media.Color,Microsoft.SPOT.Font)">
      <summary>指定された四角形内にテキストを描画します。</summary>
      <param name="text">描画されるテキスト。完全な文字列が指定された四角形内に収まらなかった場合、このパラメータには、残りのテキスト、または空の文字列が含まれます。</param>
      <param name="x">四角形の左上隅の x 座標。</param>
      <param name="y">四角形の左上隅の y 座標。</param>
      <param name="width">四角形の幅。</param>
      <param name="height">四角形の高さ。</param>
      <param name="dtFlags">テキストの形式を指定するフラグ。</param>
      <param name="color">テキストに使用される色。</param>
      <param name="font">テキストに使用されるフォント。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawTextInRect(System.String@,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,Microsoft.SPOT.Font)">
      <summary>指定された四角形内にテキストを描画します。</summary>
      <param name="text">描画されるテキスト。完全な文字列が指定された四角形内に収まらなかった場合、このパラメータには、残りのテキスト、または空の文字列が含まれます。</param>
      <param name="xRelStart">テキスト描画の開始場所の x 座標 (四角形との相対座標)。</param>
      <param name="yRelStart">テキスト描画の開始場所の y 座標 (四角形との相対座標)。</param>
      <param name="x">四角形の左上隅の x 座標。</param>
      <param name="y">四角形の左上隅の y 座標。</param>
      <param name="width">四角形の幅。</param>
      <param name="height">四角形の高さ。</param>
      <param name="dtFlags">テキストの形式を指定するフラグ。</param>
      <param name="font">テキストに使用されるフォント。</param>
      <returns>指定されたテキストがすべて描画された場合、true。それ以外の場合で、描画されなかった残りのテキストが text パラメータに含まれている場合、false。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawTextInRect(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,Microsoft.SPOT.Font)">
      <summary>指定された四角形内にテキストを描画します。</summary>
      <param name="text">描画されるテキスト。完全な文字列が指定された四角形内に収まらなかった場合、このパラメータには、残りのテキスト、または空の文字列が含まれます。</param>
      <param name="x">四角形の左上隅の x 座標。</param>
      <param name="y">四角形の左上隅の y 座標。</param>
      <param name="width">四角形の幅。</param>
      <param name="height">四角形の高さ。</param>
      <param name="dtFlags">テキストの形式を指定するフラグ。</param>
      <param name="font">テキストに使用されるフォント。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawText(System.String,Microsoft.SPOT.Font,Microsoft.SPOT.Presentation.Media.Color,System.Int32,System.Int32)">
      <summary>指定されたフォントと色を使用して、ディスプレイ デバイス上にテキストを描画します。</summary>
      <param name="text">描画されるテキスト。</param>
      <param name="font">テキストに使用されるフォント。</param>
      <param name="color">テキストに使用される色。</param>
      <param name="x">テキスト描画の開始場所の x 座標。</param>
      <param name="y">テキスト描画の開始場所の y 座標。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawText(System.String,System.Int32,System.Int32,Microsoft.SPOT.Font)">
      <summary>指定されたフォントを使用して、ディスプレイ デバイス上にテキストを描画します。</summary>
      <param name="text">描画されるテキスト。</param>
      <param name="xPos">テキスト描画の開始場所の x 座標。</param>
      <param name="yPos">テキスト描画の開始場所の y 座標。</param>
      <param name="font">テキストに使用されるフォント。</param>
      <returns>テキストの幅。ピクセル単位。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.DrawText(System.String,System.Int32,System.Int32,Microsoft.SPOT.Font,System.Single)">
      <summary>指定されたフォントとカーニングを使用して、ディスプレイ デバイス上にテキストを描画します。</summary>
      <param name="text">描画されるテキスト。</param>
      <param name="xPos">テキスト描画の開始場所の x 座標。</param>
      <param name="yPos">テキスト描画の開始場所の y 座標。</param>
      <param name="font">テキストに使用されるフォント。</param>
      <param name="kerning">テキストに使用されるカーニング。ピクセル単位。</param>
      <returns>テキストの幅。ピクセル単位。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.Flush">
      <summary>現在のビットマップをディスプレイ デバイスにフラッシュします。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.Flush(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>現在のビットマップをディスプレイ デバイスにフラッシュします。</summary>
      <param name="x">ビットマップの左上隅の x 座標。</param>
      <param name="y">ビットマップの左上隅の y 座標。</param>
      <param name="width">ビットマップの幅。</param>
      <param name="height">ビットマップの高さ。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.GetPixel(System.Int32,System.Int32)">
      <summary>ディスプレイ デバイス上の指定された位置にあるピクセルの色を取得します。</summary>
      <param name="xPos">ピクセルの色が取得される位置を表す x 座標。</param>
      <param name="yPos">ピクセルの色が取得される位置を表す y 座標。</param>
      <returns>指定された位置のピクセルの色。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.Line(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>2 つの座標 (x、y) の組で指定される 2 つの点を結ぶ線を描画します。</summary>
      <param name="x1">1 つ目の点の x 座標。</param>
      <param name="y1">1 つ目の点の y 座標。</param>
      <param name="x2">2 つ目の点の x 座標。</param>
      <param name="y2">2 つ目の点の y 座標。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.MakeTransparent(Microsoft.SPOT.Presentation.Media.Color)">
      <summary>ビットマップの透明色を設定します。</summary>
      <param name="color">ビットマップの透明色として使用される色。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.MaskBlt(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32,Microsoft.SPOT.Bitmap)">
      <summary>指定されたマスクを使用して、コピー元のビットマップと現在 (コピー先) のビットマップを結合します。</summary>
      <param name="xDst">コピー先四角形の左上隅の x 座標。</param>
      <param name="yDst">コピー先四角形の左上隅の y 座標。</param>
      <param name="nWidth">コピー元およびコピー先の四角形の幅。</param>
      <param name="nHeight">コピー元およびコピー先の四角形の高さ。</param>
      <param name="pSrc">コピー元のビットマップ。</param>
      <param name="xSrc">コピー元四角形の左上隅の x 座標。</param>
      <param name="ySrc">コピー元四角形の左上隅の y 座標。</param>
      <param name="pMask">ビットマップの結合方法を指定するマスク。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.PatBlt(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>ビットマップ上にビット パターンを作成します。</summary>
      <param name="xDst">コピー先四角形の左上隅の x 座標。</param>
      <param name="yDst">コピー先四角形の左上隅の y 座標。</param>
      <param name="nWidth">コピー元およびコピー先の四角形の幅。</param>
      <param name="nHeight">コピー元およびコピー先の四角形の高さ。</param>
      <param name="dwRop">ビットマップ上に作成するパターンを定義するラスタ操作コード。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.ResetClippingRectangle">
      <summary>ビットマップのクリッピング領域 (クリッピング四角形) をビットマップ全体にリセットします。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.RotateBlt(Microsoft.SPOT.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定された点を中心に、指定された角度、ビットマップを回転させます。</summary>
      <param name="pSrc">コピー元のビットマップ。</param>
      <param name="degree">回転の角度。</param>
      <param name="xSrc">コピー元ビットマップの中心の x 座標。</param>
      <param name="ySrc">コピー元ビットマップの中心の y 座標。</param>
      <param name="xDst">コピー先ビットマップの中心の x 座標。</param>
      <param name="yDst">コピー先ビットマップの中心の y 座標。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.SetClippingRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>ビットマップのクリッピング領域 (クリッピング四角形) に、指定された座標の組 (x、y)、幅、および高さを設定します。</summary>
      <param name="x">クリッピング四角形の左上隅の x 座標。</param>
      <param name="y">クリッピング四角形の左上隅の y 座標。</param>
      <param name="width">クリッピング四角形の幅。</param>
      <param name="height">クリッピング四角形の高さ。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.SetPixel(System.Int32,System.Int32,Microsoft.SPOT.Presentation.Media.Color)">
      <summary>指定されたピクセルの色を設定します。</summary>
      <param name="xPos">色を設定するピクセルの x 座標。</param>
      <param name="yPos">色を設定するピクセルの y 座標。</param>
      <param name="color">指定されたピクセルに設定する色。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.SetPixel(System.Int32,System.Int32,System.Boolean)">
      <summary>指定されたピクセルをオンまたはオフにします。</summary>
      <param name="xPos">設定するピクセルの x 座標。</param>
      <param name="yPos">設定するピクセルの y 座標。</param>
      <param name="fSet">true に設定してピクセルをオンにする、または false に設定してピクセルをオフにするパラメータ。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.StretchImage(System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32,System.UInt16)">
      <summary>必要に応じ四角形の領域を伸縮して、ディスプレイ デバイス上でピクセルの四角形ブロックを描画します。</summary>
      <param name="xDst">ピクセルがコピーされる四角形領域の左上隅の x 座標。</param>
      <param name="yDst">ピクセルがコピーされる四角形領域の左上隅の y 座標。</param>
      <param name="bitmap">コピー元のビットマップ。</param>
      <param name="width">ピクセルがコピーされる四角形領域の幅。</param>
      <param name="height">ピクセルがコピーされる四角形領域の高さ。</param>
      <param name="opacity">ビットマップの不透明度。値が 0 (ゼロ) の場合、ビットマップは完全に不透明 (まったく非透過的) になります。値が 255 の場合、ビットマップは完全に透過になります。</param>
    </member>
    <member name="M:Microsoft.SPOT.Bitmap.TransparentBlt(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.SPOT.Bitmap,System.Int32,System.Int32)">
      <summary>定義された四角形領域内で、指定されたコピー元ビットマップと現在のビットマップ (コピー先ビットマップ) のデータを組み合わせます。</summary>
      <param name="xDst">コピー先四角形の左上隅の x 座標。</param>
      <param name="yDst">コピー先四角形の左上隅の y 座標。</param>
      <param name="nWidth">コピー元およびコピー先の四角形の幅。</param>
      <param name="nHeight">コピー元およびコピー先の四角形の高さ。</param>
      <param name="pSrc">コピー元のビットマップ。</param>
      <param name="xSrc">コピー元四角形の左上隅の x 座標。</param>
      <param name="ySrc">コピー元四角形の左上隅の y 座標。</param>
    </member>
    <member name="P:Microsoft.SPOT.Bitmap.Height">
      <summary>現在のビットマップの高さを取得します。</summary>
      <returns>現在のビットマップの高さ。ピクセル単位。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Bitmap.Width">
      <summary>現在のビットマップの幅を取得します。</summary>
      <returns>現在のビットマップの幅。ピクセル単位。</returns>
    </member>
    <member name="T:Microsoft.SPOT.Bitmap" />
    <member name="M:Microsoft.SPOT.CancelEventArgs.#ctor">
      <summary>CancelEventArgs クラスの新規インスタンスを初期化します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.CancelEventArgs.Cancel">
      <summary>特定のイベントをキャンセルするかどうかを示す値を含みます。</summary>
    </member>
    <member name="T:Microsoft.SPOT.CancelEventArgs">
      <summary>キャンセル可能なイベントのデータを提供します。 </summary>
    </member>
    <member name="T:Microsoft.SPOT.ConstraintException">
      <summary>制約に違反するアクションを実行しようとしたときにスローされる例外。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>指定されたアサーション (条件) の評価結果が true の場合、実行が停止します。</summary>
      <param name="condition">評価される条件。戻り値が true の場合、プログラムの実行は停止します。</param>
      <param name="message">アサーションが true の場合に表示されるテキスト。</param>
      <param name="detailedMessage">アサーションが true の場合に表示される詳細メッセージ。</param>
    </member>
    <member name="M:Microsoft.SPOT.Debug.Assert(System.Boolean)">
      <summary>指定されたアサーション (条件) の評価結果が true の場合、実行が停止します。</summary>
      <param name="condition">評価される条件。戻り値が true の場合、プログラムの実行は停止します。</param>
    </member>
    <member name="M:Microsoft.SPOT.Debug.Assert(System.Boolean,System.String)">
      <summary>指定されたアサーション (条件) の評価結果が true の場合、実行が停止します。</summary>
      <param name="condition">評価される条件。戻り値が true の場合、プログラムの実行は停止します。</param>
      <param name="message">アサーションが true の場合に表示されるテキスト。</param>
    </member>
    <member name="M:Microsoft.SPOT.Debug.DumpBuffer(System.Byte[],System.Boolean,System.Boolean)">
      <summary>指定されたバッファのデータを標準出力ストリームに出力します。</summary>
      <param name="buf">バッファ データのバイトを含む配列。</param>
      <param name="fCRC">データの各行に対して巡回冗長検査 (CRC) を計算および出力するかどうかを指定するブール値。</param>
      <param name="fOffset">データの各行に対してメモリ オフセット アドレスを出力するかどうかを指定するブール値。</param>
    </member>
    <member name="M:Microsoft.SPOT.Debug.DumpHeap">
      <summary>利用可能なヒープ情報をすべて標準出力ストリームに出力します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Debug.DumpPerfCounters">
      <summary>パフォーマンス カウンタ情報を標準出力ストリームに出力します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Debug.DumpStack">
      <summary>利用可能なスタック情報をすべて標準出力ストリームに出力します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Debug.GC(System.Boolean)">
      <summary>未使用のコンピュータ メモリを自動的に収集するサービスである、ガベージ コレクションを実行します。</summary>
      <param name="force">ガベージ コレクションが強制されるべきかどうかを指定するブール値。</param>
      <returns>空き (未使用) メモリの量 (バイト単位)。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Debug.Print(System.String)">
      <summary>メッセージ (およびそれに続く現在の行ターミネータ) を標準出力ストリームに出力します。</summary>
      <param name="text">標準出力ストリームに出力するメッセージ。</param>
    </member>
    <member name="T:Microsoft.SPOT.Debug">
      <summary>コードをデバッグするのに役立つ一連のメソッドとプロパティを提供します。</summary>
    </member>
    <member name="E:Microsoft.SPOT.Dispatcher.ShutdownFinished">
      <summary>Dispatcher オブジェクト (ディスパッチャ) がシャットダウンを完了すると発生します。 </summary>
    </member>
    <member name="E:Microsoft.SPOT.Dispatcher.ShutdownStarted">
      <summary>Dispatcher オブジェクト (ディスパッチャ) がシャットダウン プロセスを開始すると発生します。
</summary>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary>特定の Dispatcher オブジェクト (ディスパッチャ) が作成されたスレッドで、指定のデリゲートを実行します。</summary>
      <param name="method">
1 つの引数を受け取るメソッドへのデリゲート。このデリゲートは、ディスパッチャのイベント キューにプッシュされます。</param>
      <param name="args">引数としてデリゲートに渡されるオブジェクト。</param>
      <returns>BeginInvoke メソッドが呼び出された直後に返されるオブジェクト。このオブジェクトは、イベント キュー内で実行が保留にされているデリゲートと対話するために使用できます。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.CheckAccess">
      <summary>呼び出しスレッドが現在の Dispatcher オブジェクト (ディスパッチャ) へのアクセス権限を持っているかどうか判定します。 </summary>
      <returns>呼び出しスレッドが現在のディスパッチャへのアクセス権限を持っている場合、true。それ以外の場合、false。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.FromThread(System.Threading.Thread)">
      <summary>指定されたスレッドの Dispatcher オブジェクト (ディスパッチャ) を取得します。</summary>
      <param name="thread">ディスパッチャが取得されるスレッド。</param>
      <returns>指定されたスレッドのディスパッチャ。 </returns>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.InvokeShutdown">
      <summary>Dispatcher オブジェクト (ディスパッチャ) のシャットダウン プロセスを同期的に開始します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.Invoke(System.TimeSpan,System.Delegate,System.Object[])">
      <summary>指定した引数を使用して指定したデリゲートを実行します。 </summary>
      <param name="timeout">プログラムが当該操作の完了を待つ最大時間。</param>
      <param name="method">複数の引数を受け取るメソッドへのデリゲート。このデリゲートは、Dispatcher オブジェクトのイベント キューに格納されます。</param>
      <param name="args">引数として指定されたメソッドに渡されるオブジェクト。引数が不要な場合は、null 参照にすることができます。</param>
      <returns>呼び出されたデリゲートからの戻り値。デリゲートに戻り値がない場合は、null 参照。 </returns>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.PushFrame(Microsoft.SPOT.DispatcherFrame)">
      <summary>実行フレームを、Dispatcher オブジェクト (ディスパッチャ) のイベント キュー上にプッシュします。</summary>
      <param name="frame">ディスパッチャによって処理されるフレーム。</param>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.Run">
      <summary>Dispatcher オブジェクト (ディスパッチャ) のイベント キューを開始します。
</summary>
    </member>
    <member name="M:Microsoft.SPOT.Dispatcher.VerifyAccess">
      <summary>呼び出しスレッドが現在の Dispatcher オブジェクト (ディスパッチャ) へのアクセス権限を持っているかどうか判定します。</summary>
    </member>
    <member name="P:Microsoft.SPOT.Dispatcher.CurrentDispatcher">
      <summary>現在実行中のスレッドに対する Dispatcher オブジェクト (ディスパッチャ) を取得し、現在のスレッドに既に関連付けられたディスパッチャがない場合は、新規のディスパッチャを作成します。
</summary>
      <returns>現在のスレッドと関連付けられたディスパッチャ。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Dispatcher.HasShutdownFinished">
      <summary>現在の Dispatcher オブジェクト (ディスパッチャ) がシャットダウンを完了したかどうかを判定します。
</summary>
      <returns>現在のディスパッチャがシャットダウンを完了した場合、true。それ以外の場合、false。 </returns>
    </member>
    <member name="P:Microsoft.SPOT.Dispatcher.HasShutdownStarted">
      <summary>
現在の Dispatcher オブジェクト (ディスパッチャ) がシャットダウン中かどうかを判定します。</summary>
      <returns>現在のディスパッチャがシャットダウンを開始済みの場合、true。それ以外の場合、false。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Dispatcher.Thread">
      <summary>現在の Dispatcher オブジェクト (ディスパッチャ) が関連付けられているスレッドを取得します。
</summary>
      <returns>現在のディスパッチャと関連付けられたスレッド。</returns>
    </member>
    <member name="T:Microsoft.SPOT.Dispatcher">
      <summary>スレッドのイベント キューを維持するためのサービスを提供します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherFrame.#ctor(System.Boolean)">
      <summary>
指定された終了要求フラグを使用して、DispatcherFrame クラスの新規インスタンスを初期化します。
  </summary>
      <param name="exitWhenRequested">すべてのフレームを終了するよう要求されたときに、現在のディスパッチャ フレームを終了するかどうかを示します。</param>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherFrame.#ctor">
      <summary>DispatcherFrame クラスの新規インスタンスを初期化します。
  </summary>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherFrame.Continue">
      <summary>現在のディスパッチャ フレームを継続するかどうかを示す値を取得または設定します。</summary>
      <returns>ディスパッチャ フレームを継続する場合、true。それ以外の場合、false。</returns>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherFrame">
      <summary>ディスパッチャのイベント キューの実行ループの反復を表します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherObject.#ctor">
      <summary>DispatcherObject クラスの新規インスタンスを初期化します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.DispatcherObject.Dispatcher">
      <summary>現在の DispatcherObject オブジェクトが関連付けられた Dispatcher オブジェクトを含みます。
</summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherObject.CheckAccess">
      <summary>呼び出しスレッドが現在の DispatcherObject オブジェクトへのアクセス権限を持っているかどうか判定します。 </summary>
      <returns>呼び出しスレッドが現在のオブジェクトへのアクセス権限を持っている場合、true。それ以外の場合、false。
      </returns>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherObject.VerifyAccess">
      <summary>
呼び出しスレッドが現在の DispatcherObject オブジェクトへのアクセス権限を持っているかどうか判定します。
  </summary>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherObject">
      <summary>ディスパッチャと関連付けられたオブジェクトを表します。</summary>
    </member>
    <member name="E:Microsoft.SPOT.DispatcherOperation.Aborted">
      <summary>現在の DispatcherOperation オブジェクトに関連付けられたディスパッチャ キューのデリゲートが中止されたときに発生します。 </summary>
    </member>
    <member name="E:Microsoft.SPOT.DispatcherOperation.Completed">
      <summary>
現在の DispatcherOperation オブジェクトに関連付けられたディスパッチャ キュー上のデリゲートが完了したときに発生します。
  </summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherOperation.Abort">
      <summary>現在の DispatcherOperation オブジェクトに関連付けられたディスパッチャ キューのデリゲートを中止します。 </summary>
      <returns>操作が中止された場合、true。それ以外の場合、false。</returns>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherOperation.Wait(System.TimeSpan)">
      <summary>ディスパッチャ キュー上のデリゲートが完了するまで、指定された長さの時間、待機します。 </summary>
      <param name="timeout">このメソッドが待機する最大時間。</param>
      <returns>操作の状態。</returns>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherOperation.Wait">
      <summary>
現在の DispatcherOperation オブジェクトに関連付けられたディスパッチャ キュー上のデリゲートが完了するまで待機します。
  </summary>
      <returns>操作の状態。</returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherOperation.Dispatcher">
      <summary>現在の DispatcherOperation オブジェクトに関連付けられたデリゲートが渡されたディスパッチャを取得します。 </summary>
      <returns>デリゲートが渡されたディスパッチャ。 </returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherOperation.Result">
      <summary>操作が完了した場合、現在の DispatcherOperation オブジェクトと関連付けられたデリゲートの結果を取得します。 </summary>
      <returns>操作の結果。</returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherOperation.Status">
      <summary>現在の DispatcherOperation オブジェクトと関連付けられたディスパッチャ キュー上のデリゲートの現在の操作状態を取得します。 </summary>
      <returns>操作の状態。</returns>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherOperation">
      <summary>プログラムがディスパッチャ キューに渡されたデリゲートと対話できるようにします。 </summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherTimer.#ctor">
      <summary>DispatcherTimer クラスの新規インスタンスを初期化します。
  </summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherTimer.#ctor(Microsoft.SPOT.Dispatcher)">
      <summary>DispatcherTimer クラスの新規インスタンスを初期化し、そのインスタンスを指定された Dispatcher オブジェクトに関連付けます。
  </summary>
      <param name="dispatcher">現在のタイマと関連付けられたディスパッチャ。</param>
    </member>
    <member name="E:Microsoft.SPOT.DispatcherTimer.Tick">
      <summary>現在の DispatcherTimer オブジェクト (タイマ) の指定された時間間隔が経過し、タイマが有効な場合、発生します。 </summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherTimer.Start">
      <summary>DispatcherTimer オブジェクトのタイマを開始します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.DispatcherTimer.Stop">
      <summary>DispatcherTimer オブジェクトのタイマを停止します。
  </summary>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherTimer.Dispatcher">
      <summary>現在の DispatcherTimer オブジェクト (タイマ) と関連付けられた Dispatcher オブジェクト (ディスパッチャ) を取得します。</summary>
      <returns>現在のタイマと関連付けられたディスパッチャ。 </returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherTimer.Interval">
      <summary>現在の DispatcherTimer オブジェクトの定義済み時間間隔を取得または設定します。</summary>
      <returns>タイマのティック間の時間間隔。時間:分:秒の形式で表されます。既定値は、00:00:00 です。</returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherTimer.IsEnabled">
      <summary>特定の DispatcherTimer オブジェクト (タイマ) が有効である (現在実行中である) かどうかを示すブール値を取得または設定します。 </summary>
      <returns>
タイマが現在実行中である場合、true。それ以外の場合、false。既定値は、false です。
      </returns>
    </member>
    <member name="P:Microsoft.SPOT.DispatcherTimer.Tag">
      <summary>Tick イベント ハンドラに渡されるユーザー定義のデータ オブジェクトを取得または設定します。</summary>
      <returns>Tick イベント ハンドラに渡されるユーザー定義のデータ オブジェクト。既定値は、null 参照です。</returns>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherTimer">
      <summary>ディスパッチャ キューに統合されたタイマ。 </summary>
    </member>
    <member name="M:Microsoft.SPOT.EventArgs.#ctor">
      <summary>EventArgs クラスの新規インスタンスを初期化します。 </summary>
    </member>
    <member name="P:Microsoft.SPOT.EventArgs.Empty">
      <summary>空の、読み取り専用の EventArgs オブジェクトを取得します。
  </summary>
      <returns>空の、読み取り専用の EventArgs オブジェクト。これは、EventArgs コンストラクタを呼び出すことと同じ結果になります。</returns>
    </member>
    <member name="T:Microsoft.SPOT.EventArgs">
      <summary>イベント データを含むクラスの基本クラスを構成します。 </summary>
    </member>
    <member name="M:Microsoft.SPOT.EventHandlersStore.#ctor">
      <summary>EventHandlersStore クラスの新規インスタンスを初期化します。
</summary>
    </member>
    <member name="M:Microsoft.SPOT.EventHandlersStore.AddRoutedEventHandler(Microsoft.SPOT.RoutedEvent,System.Delegate,System.Boolean)">
      <summary>指定の RoutedEvent オブジェクトに対する指定のルーティング イベント ハンドラを、現在の EventHandlersStore オブジェクト内のイベント コレクションに追加します。 </summary>
      <param name="routedEvent">ルーティング イベント。</param>
      <param name="handler">ルーティング イベントに対するハンドラ。</param>
      <param name="handledEventsToo">ルーティング イベント ハンドラが、処理済みのイベントも処理するかどうかを示すブール値。</param>
    </member>
    <member name="T:Microsoft.SPOT.EventHandlersStore">
      <summary>イベント ハンドラのコンテナを提供します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.EventRoute.#ctor(Microsoft.SPOT.RoutedEvent)">
      <summary>EventRoute クラスの新規インスタンスを初期化します。
</summary>
      <param name="routedEvent">現在のイベント ルートに関連付けられたイベント識別子 (ID)。このパラメータは null に設定できない点に注意してください。</param>
    </member>
    <member name="M:Microsoft.SPOT.EventRoute.Add(System.Object,System.Delegate,System.Boolean)">
      <summary>指定のターゲットに対する指定のハンドラをイベント ルートに追加します。</summary>
      <param name="target">ハンドラをイベント ルートに追加するターゲット オブジェクト。</param>
      <param name="handler">イベント ルートに追加するハンドラ。</param>
      <param name="handledEventsToo">処理済みのイベントをリスナが検出するかどうかを示す値。</param>
    </member>
    <member name="T:Microsoft.SPOT.EventRoute">
      <summary>ルーティング イベントが後に続くルートのコンテナを提供します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExecutionConstraint.Install(System.Int32,System.Int32)">
      <summary>呼び出しスレッド内にサブスレッドを作成します。このサブスレッドには、指定された時間間隔内に指定された優先度で操作を完了することを呼び出しスレッドに要求する制約が含まれます。</summary>
      <param name="timeout">ConstraintException 例外がスローされるまでのクロック ティック数。このパラメータの値が -1 の場合は、現在の制約例外が除去される点に注意してください。</param>
      <param name="priority">呼び出しスレッドの優先度。</param>
    </member>
    <member name="T:Microsoft.SPOT.ExecutionConstraint">
      <summary>特定の制約内で操作を完了するためにスレッドを要求することを目的として使用できるメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.#ctor(System.Threading.TimerCallback,System.Object,Microsoft.SPOT.ExtendedTimer.TimeEvents)">
      <summary>ExtendedTimer クラスの新規インスタンスを初期化します。</summary>
      <param name="callback">タイマの終了時に実行されるコールバック メソッド。</param>
      <param name="state">コールバック メソッドによって呼び出されたメソッドに関連するアプリケーション固有の情報を含むオブジェクト、または null 参照。</param>
      <param name="ev">コールバック メソッドを実行するイベント。</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.#ctor(System.Threading.TimerCallback,System.Object,System.DateTime,System.TimeSpan)">
      <summary> System.DateTime および System.TimeSpan の値を使用して時間間隔を計測し、ExtendedTimer クラスの新規インスタンスを初期化します。</summary>
      <param name="callback">タイマの終了時に実行されるコールバック メソッド。</param>
      <param name="state">コールバック メソッドによって呼び出されたメソッドに関連するアプリケーション固有の情報を含むオブジェクト、または null 参照。</param>
      <param name="dueTime">コールバック メソッドがメソッドを呼び出す前にタイマが待機する時間の長さを表す System.DateTime の値。ミリ秒単位。タイマが開始しないようにするには、System.Threading.Timeout.Infinite を指定します。タイマをすぐに開始するには、0 (ゼロ) を指定します。</param>
      <param name="period">コールバック メソッドによって参照されるメソッドの呼び出しの時間間隔を表す System.TimeSpan の値。ミリ秒単位。周期的なシグナルを無効にするには、System.Threading.Timeout.Infinite を指定します。</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)">
      <summary>System.TimeSpan の値を使用して時間間隔を計測し、ExtendedTimer クラスの新規インスタンスを初期化します。</summary>
      <param name="callback">タイマの終了時に実行されるコールバック メソッド。</param>
      <param name="state">コールバック メソッドによって呼び出されたメソッドに関連するアプリケーション固有の情報を含むオブジェクト、または null 参照。</param>
      <param name="dueTime">コールバック メソッドがメソッドを呼び出す前にタイマが待機する時間の長さ。ミリ秒単位。タイマが開始しないようにするには、System.Threading.Timeout.Infinite を指定します。タイマをすぐに開始するには、0 (ゼロ) を指定します。</param>
      <param name="period">コールバック メソッドによって参照されるメソッドの呼び出しの時間間隔。ミリ秒単位。周期的なシグナルを無効にするには、System.Threading.Timeout.Infinite を指定します。</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)">
      <summary> 32 ビット符号付き整数を使用して時間間隔を計測し、ExtendedTimer クラスの新規インスタンスを初期化します。</summary>
      <param name="callback">タイマの終了時に実行されるコールバック メソッド。</param>
      <param name="state">コールバック メソッドによって呼び出されたメソッドに関連するアプリケーション固有の情報を含むオブジェクト、または null 参照。</param>
      <param name="dueTime">コールバック メソッドがメソッドを呼び出す前にタイマが待機する時間の長さ。ミリ秒単位。タイマが開始しないようにするには、System.Threading.Timeout.Infinite を指定します。タイマをすぐに開始するには、0 (ゼロ) を指定します。</param>
      <param name="period">コールバック メソッドによって参照されるメソッドの呼び出しの時間間隔。ミリ秒単位。周期的なシグナルを無効にするには、System.Threading.Timeout.Infinite を指定します。</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.Change(System.TimeSpan,System.TimeSpan)">
      <summary>時間間隔を計るために System.TimeSpan 値を使用して、タイマの開始時刻とメソッド呼び出し間隔を変更します。 </summary>
      <param name="dueTime">コールバック パラメータがメソッドを呼び出す前にタイマが待機する時間の長さを表す System.TimeSpan の値。ミリ秒単位。タイマが開始しないようにするには、System.Threading.Timeout.Infinite を指定します。タイマをすぐに開始するには、0 (ゼロ) を指定します。
    </param>
      <param name="period">
System.Threading.Timer の構築時に指定されたデリゲートによって参照されるメソッドの呼び出し間隔を表す System.TimeSpan の値。ミリ秒単位。周期的なシグナルを無効にするには、System.Threading.Timeout.Infinite を指定します。</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.Change(System.DateTime,System.TimeSpan)">
      <summary>時間間隔を計るために System.DateTime および System.TimeSpan 値を使用して、タイマの開始時刻とメソッド呼び出し間隔を変更します。</summary>
      <param name="dueTime">コールバック パラメータがメソッドを呼び出す前にタイマが待機する時間の長さを表す System.DateTime の値。ミリ秒単位。タイマが開始しないようにするには、System.Threading.Timeout.Infinite を指定します。タイマをすぐに開始するには、0 (ゼロ) を指定します。
    </param>
      <param name="period">
System.Threading.Timer の構築時に指定されたデリゲートによって参照されるメソッドの呼び出し間隔を表す System.TimeSpan の値。ミリ秒単位。周期的なシグナルを無効にするには、System.Threading.Timeout.Infinite を指定します。</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.Change(System.Int32,System.Int32)">
      <summary>時間間隔を計るために 32 ビット符号付き整数を使用して、タイマの開始時刻とメソッド呼び出し間隔を変更します。</summary>
      <param name="dueTime">System.Threading.Timer の構築時に指定されたデリゲートがメソッドを呼び出す前に、タイマが待機する時間の長さ。ミリ秒単位。タイマが再開しないようにするには、System.Threading.Timeout.Infinite を指定します。タイマをすぐに再開するには、0 (ゼロ) を指定します。</param>
      <param name="period">System.Threading.Timer の構築時に指定されたデリゲートによって参照されるメソッドの呼び出し間隔。ミリ秒単位。周期的なシグナルを無効にするには、System.Threading.Timeout.Infinite を指定します。</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimer.Dispose">
      <summary>現在の ExtendedTimer クラスのインスタンスで使用されているリソースをすべて解放します。</summary>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedTimer.LastExpiration">
      <summary>現在のタイマの最後の時間切れの System.TimeSpan の値を取得します。</summary>
      <returns>現在のタイマの最後の時間切れの System.TimeSpan の値。</returns>
    </member>
    <member name="T:Microsoft.SPOT.ExtendedTimer">
      <summary>指定された間隔で、または特定のイベントの発生時に、メソッドを実行する機構を提供します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.ExtendedTimeZone.c_TicksTo20030101">
      <summary>2003/01/01 00:00:00 の DateTime 値に等しいクロックのティック数を指定します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.GetDaylightChanges(System.Int32)">
      <summary>指定された年の夏時間の期間を検索します。</summary>
      <param name="year">夏時間の期間が適用される年。</param>
      <returns>指定された年の夏時間の開始日と終了日を含む System.Globalization.DaylightTime 値。</returns>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.GetTimeZone(Microsoft.SPOT.TimeZoneId)">
      <summary>指定したタイム ゾーン ID のタイム ゾーンを返します。</summary>
      <param name="id">取得するタイム ゾーンの ID。</param>
      <returns>指定したタイム ゾーン ID に設定された System.TimeZone の値。</returns>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.GetUtcOffset(System.DateTime)">
      <summary>指定したローカル時間の協定世界時 (UTC) オフセットを検索します。</summary>
      <param name="time">現地の日付と時刻。</param>
      <returns>クロックのティック単位で計測した、UTC オフセットを検索するローカル時間。</returns>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.SetTimeOffset(System.Int32)">
      <summary>時間のオフセットを設定します。</summary>
      <param name="minutes">デバイスのシステム時刻を真の時刻より進ませる場合の時間差。分単位。</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.SetTimeZoneInfo(Microsoft.SPOT.TimeZoneInformation)">
      <summary>特定のタイム ゾーンの拡張情報を設定します。</summary>
      <param name="timeZoneInformation">特定のタイム ゾーンの拡張情報。</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.SetTimeZone(Microsoft.SPOT.TimeZoneId)">
      <summary>タイム ゾーンを設定します。</summary>
      <param name="id">デバイス システムに設定するタイム ゾーン。</param>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedTimeZone.SynchronizeWithNetworkTime(System.DateTime,System.TimeSpan,Microsoft.SPOT.TimeZoneId)">
      <summary>デバイス システムに現在ネットワーク接続が存在する場合、デバイス システム時刻とネットワーク時刻を同期します。</summary>
      <param name="startOfFrameUniversalTime">ネットワークから取得した UTC 時刻。</param>
      <param name="startofFrameMachineTime">デバイス システム時刻。</param>
      <param name="tzi">同期するタイム ゾーンの ID。</param>
      <returns>ネットワーク時刻とデバイス システム時刻の差に設定される System.TimeSpan の値。</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedTimeZone.DaylightName">
      <summary>特定のタイム ゾーンの夏時間の名前を取得します。</summary>
      <returns>特定のタイム ゾーンの夏時間の名前。</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedTimeZone.StandardName">
      <summary>特定のタイム ゾーンの標準名を取得します。</summary>
      <returns>特定のタイム ゾーンの標準名。</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedTimeZone.TimeZoneId">
      <summary>特定のタイム ゾーンの ID を取得します。</summary>
      <returns>特定のタイム ゾーンの ID。</returns>
    </member>
    <member name="T:Microsoft.SPOT.ExtendedTimeZone">
      <summary>タイム ゾーンを表します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedWeakReference.#ctor(System.Object,System.Type,System.UInt32,System.UInt32)">
      <summary>ExtendedWeakReference クラスの新規インスタンスを初期化し、指定されたオブジェクトを参照するようにします。</summary>
      <param name="target">現在の弱い参照を対象とするオブジェクト。</param>
      <param name="selector">現在の弱い参照に関連付ける型。</param>
      <param name="id">現在の弱い参照に関連付ける識別子。</param>
      <param name="flags">現在の弱い参照がどのような状態から回復可能であるべきかを指定するフラグ。</param>
    </member>
    <member name="F:Microsoft.SPOT.ExtendedWeakReference.c_SurviveBoot">
      <summary>現在の弱い参照がデバイス再起動後に回復可能となることを指定するフラグを含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.ExtendedWeakReference.c_SurvivePowerdown">
      <summary>デバイスの電源を切って再起動した後、現在の弱い参照が回復可能となることを指定するフラグを含みます。</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedWeakReference.PushBackIntoRecoverList">
      <summary>デバイスを再起動した後、または電源を切って再起動した後、回復の候補として ExtendedWeakReference オブジェクトにフラグを立てます。</summary>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedWeakReference.RecoverOrCreate(System.Type,System.UInt32,System.UInt32)">
      <summary>特定の ExtendedWeakReference オブジェクトの回復を試みます。復旧が失敗した場合、このクラスの新規インスタンスを作成します。</summary>
      <param name="selector">回復する弱い参照と関連付けられた型。</param>
      <param name="id">回復する弱い参照と関連付けられた ID。</param>
      <param name="flags">指定したオブジェクトが回復しなかった場合に作成される、新規 ExtendedWeakReference オブジェクト用のフラグ。</param>
      <returns>指定した弱い参照。または、復旧が失敗した場合、null 参照。</returns>
    </member>
    <member name="M:Microsoft.SPOT.ExtendedWeakReference.Recover(System.Type,System.UInt32)">
      <summary>特定の ExtendedWeakReference オブジェクトを回復します。</summary>
      <param name="selector">回復する弱い参照と関連付けられた型。</param>
      <param name="id">回復する弱い参照と関連付けられた ID。</param>
      <returns>弱い参照。または、回復する弱い参照が既にない場合、null 参照。</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedWeakReference.Flags">
      <summary>現在の弱い参照の回復が必要な状態を指定するフラグを取得します。</summary>
      <returns>現在の弱い参照の回復フラグ。</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedWeakReference.Id">
      <summary>現在の ExtendedWeakReference オブジェクトに関連付けられた ID を取得します。</summary>
      <returns>現在の弱い参照の ID。</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedWeakReference.Priority">
      <summary>現在の ExtendedWeakReference オブジェクトの優先度を取得または設定します。  </summary>
      <returns>現在の弱い参照の優先度。</returns>
    </member>
    <member name="P:Microsoft.SPOT.ExtendedWeakReference.Selector">
      <summary>
現在の ExtendedWeakReference オブジェクトのセレクタを取得します。</summary>
      <returns>現在の弱い参照のセレクタ。</returns>
    </member>
    <member name="T:Microsoft.SPOT.ExtendedWeakReference">
      <summary>拡張された弱い参照を表します。弱い参照は、オブジェクトを参照しますが、そのオブジェクトがガベージ コレクションの対象となりやすいことに変わりはありません。</summary>
    </member>
    <member name="M:Microsoft.SPOT.FieldNoReflectionAttribute.#ctor">
      <summary>FieldNoReflectionAttribute オブジェクトを構築します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.FieldNoReflectionAttribute">
      <summary>リフレクションが存在しないようにフィールドを設定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Font.DefaultKerning">
      <summary>特定のフォントの既定のカーニングを含みます。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Font.CharWidth(System.Char)">
      <summary>指定された文字の幅 (ピクセル単位) を取得します。</summary>
      <param name="c">幅を取得する文字。</param>
      <returns>指定された文字の幅 (ピクセル単位)。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Font.ComputeExtent(System.String,System.Int32@,System.Int32@,System.Int32)">
      <summary>指定されたテキスト行の幅、高さ、およびカーニングを計算します。</summary>
      <param name="text">測定するテキスト。</param>
      <param name="width">指定されたテキストの幅。</param>
      <param name="height">指定されたテキストの高さ。</param>
      <param name="kerning">連続する文字の間隔。</param>
    </member>
    <member name="M:Microsoft.SPOT.Font.ComputeExtent(System.String,System.Int32@,System.Int32@)">
      <summary>指定されたテキスト行の幅と高さを計算します。</summary>
      <param name="text">測定するテキスト。</param>
      <param name="width">指定されたテキストの幅。</param>
      <param name="height">指定されたテキストの高さ。</param>
    </member>
    <member name="M:Microsoft.SPOT.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
      <summary>指定された文字列の表示に必要な、ディスプレイ デバイス上の四角形領域のサイズを計算します。</summary>
      <param name="text">ディスプレイ デバイス上で表示するテキスト。</param>
      <param name="renderWidth">テキストの表示に必要な四角形領域の幅。ピクセル単位。
      </param>
      <param name="renderHeight">テキストの表示に必要な四角形領域の高さ。ピクセル単位。
      </param>
      <param name="xRelStart">テキストの相対的な開始点の x 座標。</param>
      <param name="yRelStart">テキストの相対的な開始点の y 座標。</param>
      <param name="availableWidth">定義された四角形領域に収まるテキストの最大幅。</param>
      <param name="availableHeight">定義された四角形領域に収まるテキストの最大の高さ。</param>
      <param name="dtFlags">配置などのさまざまなテキスト属性を指定するフラグ。</param>
    </member>
    <member name="M:Microsoft.SPOT.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@,System.Int32)">
      <summary>指定された文字列の表示に必要な、ディスプレイ デバイス上の四角形領域のサイズを計算します。</summary>
      <param name="text">ディスプレイ デバイス上で表示するテキスト。</param>
      <param name="renderWidth">テキストの表示に必要な四角形領域の幅。ピクセル単位。</param>
      <param name="renderHeight">テキストの表示に必要な四角形領域の高さ。ピクセル単位。</param>
      <param name="availableWidth">定義された四角形領域に収まるテキストの最大幅。</param>
    </member>
    <member name="M:Microsoft.SPOT.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@)">
      <summary>指定された文字列の表示に必要な、ディスプレイ デバイス上の四角形領域のサイズを計算します。</summary>
      <param name="text">ディスプレイ デバイス上で表示するテキスト。</param>
      <param name="renderWidth">テキストの表示に必要な四角形領域の幅。ピクセル単位。
      </param>
      <param name="renderHeight">テキストの表示に必要な四角形領域の高さ。ピクセル単位。
      </param>
    </member>
    <member name="P:Microsoft.SPOT.Font.Ascent">
      <summary>現在のフォントに対するアセントの測定値 (ピクセル単位) を取得します。</summary>
      <returns>現在のフォントに対するアセントの測定値 (ピクセル単位)。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.AverageWidth">
      <summary>現在のフォントの平均文字幅 (ピクセル単位) を取得します。</summary>
      <returns>現在のフォントの平均文字幅 (ピクセル単位)。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.Descent">
      <summary>現在のフォントに対するディセントの測定値 (ピクセル単位) を取得します。</summary>
      <returns>現在のフォントに対するディセントの測定値 (ピクセル単位)。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.ExternalLeading">
      <summary>現在のフォントに対する外部レディングの測定値 (ピクセル単位) を取得します。</summary>
      <returns>現在のフォントに対する外部レディングの測定値 (ピクセル単位)。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.Height">
      <summary>現在のフォントの高さ (ピクセル単位) を取得します。</summary>
      <returns>現在のフォントの高さ。ピクセル単位。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.InternalLeading">
      <summary>現在のフォントに対する内部レディングの測定値 (ピクセル単位) を取得します。</summary>
      <returns>現在のフォントに対する内部レディングの測定値 (ピクセル単位)。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Font.MaxWidth">
      <summary>現在のフォントに含まれる最大幅文字の幅 (ピクセル単位) を取得します。</summary>
      <returns>現在のフォントに含まれる最大幅文字の幅 (ピクセル単位)。</returns>
    </member>
    <member name="T:Microsoft.SPOT.Font">
      <summary>テキストの特定の書式 (フォント、フォント サイズ、スタイルの属性など) を定義します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.GloballySynchronizedAttribute">
      <summary>特定のメソッドがグローバルに同期化されていることを示します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Logging.AppendRecord(System.Object)">
      <summary>ログ レコードのリストの末尾に Logging オブジェクト (ログ レコード) を追加します。</summary>
      <param name="o">リストの末尾に追加するログ レコード。</param>
    </member>
    <member name="M:Microsoft.SPOT.Logging.Erase">
      <summary>すべての Logging オブジェクト (ログ レコード) を消去します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Logging.GetRecord(System.Int32)">
      <summary>インデックスが 0 から始まるログ レコードのリストから、Logging オブジェクト (ログ レコード) を取得します。</summary>
      <param name="i">取得するログ レコードのインデックス番号。</param>
      <returns>ログ レコード。</returns>
    </member>
    <member name="P:Microsoft.SPOT.Logging.NumberOfRecords">
      <summary>現在のレコード リストにある Logging オブジェクト (ログ レコード) の数を取得します。</summary>
      <returns>現在のレコード リストにあるログ レコードの数。</returns>
    </member>
    <member name="T:Microsoft.SPOT.Logging">
      <summary>ログに記録したデータの管理に使用するメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Math.Cos(System.Int32)">
      <summary>指定された角度のコサインを取得します。</summary>
      <param name="angle">角度 (単位は度)。</param>
      <returns>指定された角度のコサインを 1000 で乗算した値。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Math.Randomize">
      <summary>乱数生成のランダムな起点を設定します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Math.Random(System.Int32)">
      <summary>擬似乱数を生成します。</summary>
      <param name="modulo">生成される擬似乱数に適用するモジュロ。生成される数値は、0 (ゼロ) 以上モジュロ未満である点に注意してください。</param>
      <returns>擬似乱数。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Math.Sin(System.Int32)">
      <summary>指定された角度のサインを取得します。</summary>
      <param name="angle">角度 (単位は度)。</param>
      <returns>指定された角度のサインを、1000 で乗算した値。</returns>
    </member>
    <member name="T:Microsoft.SPOT.Math">
      <summary>一般的な数学関数用の静的メソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.PropertyChangedEventArgs.#ctor(System.String,System.Object,System.Object)">
      <summary>PropertyChangedEventArgs クラスの新規インスタンスを初期化します。
</summary>
      <param name="property">変更されたプロパティの名前。</param>
      <param name="oldValue">指定されたプロパティの変更前の値。</param>
      <param name="newValue">指定されたプロパティの変更後の値。</param>
    </member>
    <member name="F:Microsoft.SPOT.PropertyChangedEventArgs.NewValue">
      <summary>指定されたプロパティの変更後の値を含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.PropertyChangedEventArgs.OldValue">
      <summary>指定されたプロパティの変更前の値を含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.PropertyChangedEventArgs.Property">
      <summary>変更されるプロパティの名前を含みます。</summary>
    </member>
    <member name="T:Microsoft.SPOT.PropertyChangedEventArgs">
      <summary>プロパティ変更イベントのデータを提供します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.PublishInApplicationDirectoryAttribute.#ctor">
      <summary>PublishInApplicationDirectoryAttribute クラスの新規インスタンスを作成および初期化します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.PublishInApplicationDirectoryAttribute">
      <summary>アプリケーションがそのアプリケーション ディレクトリで公開されるべきであることを示します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.#ctor">
      <summary>Reflection クラスの新規インスタンスを作成および初期化します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.Deserialize(System.Byte[],System.Type)">
      <summary>データのバイト配列を、指定した型のオブジェクトにシリアル化解除します。</summary>
      <param name="v">シリアル化されたオブジェクトを表すデータを含むバイト配列。</param>
      <param name="t">シリアル化解除されるオブジェクトの型。v パラメータ内の配列にその型が含まれる場合、これは null 参照である必要があります。</param>
      <returns>バイト配列によってよって表される、シリアル化解除されるオブジェクト。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblies">
      <summary>すべての既知のアセンブリを取得します。</summary>
      <returns>すべての既知のアセンブリを含む配列。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblyFromHash(System.UInt32)">
      <summary>指定されたハッシュ属性を持つアセンブリを取得します。</summary>
      <param name="hash">取得するアセンブリのハッシュ属性。</param>
      <returns>指定されたハッシュ属性を持つアセンブリ。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblyHash(System.Reflection.Assembly)">
      <summary>指定されたアセンブリからハッシュ属性を取得します。</summary>
      <param name="assm">ハッシュ属性の取得元となるアセンブリ。</param>
      <returns>指定されたアセンブリを表すハッシュ属性。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblyInfo(System.Byte[],Microsoft.SPOT.Reflection.AssemblyInfo)">
      <summary>指定されたアセンブリを表すバイト配列から AssemblyInfo オブジェクトを取得します。</summary>
      <param name="assm">指定されたアセンブリを表すバイト配列。</param>
      <param name="ai">バイト配列から抽出したデータで事前設定されるアセンブリ。</param>
      <returns>AssemblyInfo オブジェクトに、バイト配列から抽出された有効なデータが含まれる場合、true。それ以外の場合、false。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblyLastUse(System.Reflection.Assembly)">
      <summary>指定されたアセンブリが最後に使用された時間を表す System.TimeSpan 値を取得します。</summary>
      <param name="assm">指定されたアセンブリ。</param>
      <returns>指定されたアセンブリが最後に使用された時間。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetAssemblyPatch(System.Reflection.Assembly)">
      <summary>指定されたアセンブリに対する修正プログラムとして指定されたアセンブリを取得します。</summary>
      <param name="assm">指定されたアセンブリ。</param>
      <returns>指定されたアセンブリの修正プログラムであるアセンブリ。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetTypeFromHash(System.UInt32)">
      <summary>指定したハッシュ属性を使用する型を取得します。</summary>
      <param name="hash">指定した型のハッシュ属性。</param>
      <returns>指定したハッシュ属性に対応する型。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetTypeHash(System.Type)">
      <summary>指定した型のハッシュ属性を取得します。</summary>
      <param name="t">ハッシュ属性の取得元となる型。</param>
      <returns>指定した型を表すハッシュ属性。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.GetTypesImplementingInterface(System.Type)">
      <summary>指定したインターフェイスを実装する System.Type オブジェクト (型) を取得します。 </summary>
      <param name="itf">検索対象のインターフェイスの型。</param>
      <returns>型の配列。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.IsTypeLoaded(System.Type)">
      <summary>指定した型が読み込まれているかどうかを示します。</summary>
      <param name="t">確認対象の型。</param>
      <returns>指定した型が読み込まれている場合、true。それ以外の場合、false。</returns>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.Serialize(System.Object,System.Type)">
      <summary>データのバイト配列を、指定された型のオブジェクトにシリアル化します。</summary>
      <param name="o">シリアル化するオブジェクト。</param>
      <param name="t">シリアル化するオブジェクトの型。このパラメータは、null 参照の場合もあります。</param>
      <returns>シリアル化されたオブジェクトを表すデータを含むバイト配列。</returns>
    </member>
    <member name="T:Microsoft.SPOT.Reflection">
      <summary>アセンブリ、およびアセンブリ内で定義された型について説明します。また、実行時の、型インスタンスの作成、呼び出し、およびアクセスについても説明します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.Reflection.AssemblyInfo.#ctor">
      <summary>AssemblyInfo クラスの新規インスタンスを作成および初期化します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.m_flags">
      <summary>現在のアセンブリについて説明するフラグを含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.m_hash">
      <summary>現在のアセンブリの一意識別子である、アセンブリのハッシュ属性を含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.m_name">
      <summary>現在のアセンブリの名前を含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.c_Flags_NeedReboot">
      <summary>現在のアセンブリのインストール後にデバイスの再起動が必要なことを指定するフラグを含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.c_Flags_Patch">
      <summary>現在のアセンブリが別のアセンブリの修正プログラムであることを示すフラグを含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.m_refs">
      <summary>現在のアセンブリが依存しているアセンブリへの参照の配列を含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.Reflection.AssemblyInfo.m_size">
      <summary>現在のアセンブリのサイズを指定します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.Reflection.AssemblyInfo">
      <summary>AssemblyInfo オブジェクト (アセンブリ) を定義します。これは、自己記述型の、共通言語ランタイム (CLR) アプリケーションのビルド ブロックです。</summary>
    </member>
    <member name="M:Microsoft.SPOT.ResourceUtility.#ctor">
      <summary>ResourceUtility オブジェクトを構築します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.ResourceUtility.GetDelimitedStringResources(System.Resources.ResourceManager,System.Enum)">
      <summary>指定されたリソースの文字列表記を取得します。</summary>
      <param name="rm">指定されたリソースを含むリソース マネージャ。</param>
      <param name="resource">文字列表記を取得する対象のリソースの型を指定する列挙値。</param>
      <returns>指定されたリソースの文字列表記。</returns>
    </member>
    <member name="M:Microsoft.SPOT.ResourceUtility.GetDelimitedStringResource(System.Resources.ResourceManager,System.Enum,System.Int32)">
      <summary>指定されたリソースの文字列表記を取得します。</summary>
      <param name="rm">指定されたリソースを含むリソース マネージャ。</param>
      <param name="resource">指定されたリソースの型を示す列挙値。</param>
      <param name="i">文字列表記を取得する対象のリソースのインデックス番号 (リソース マネージャのリソース コレクション内)。</param>
      <returns>指定されたリソースの文字列表記。</returns>
    </member>
    <member name="M:Microsoft.SPOT.ResourceUtility.GetObject(System.Resources.ResourceManager,System.Enum)">
      <summary>現在のシステム カルチャの、指定された Object リソースの値を取得します。</summary>
      <param name="rm">指定されたリソースを含むリソース マネージャ。</param>
      <param name="id">指定されたリソースの整数の識別子。</param>
      <returns>現在のシステム カルチャの、指定されたリソースの値。</returns>
    </member>
    <member name="M:Microsoft.SPOT.ResourceUtility.SetCurrentUICulture(System.Globalization.CultureInfo)">
      <summary>現在のシステム カルチャの情報を設定します。</summary>
      <param name="culture">現在のシステム カルチャの情報を含むオブジェクト。</param>
    </member>
    <member name="T:Microsoft.SPOT.ResourceUtility">
      <summary>.NET Micro Framework アプリケーションがリソースを管理するのを支援します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEvent.#ctor(System.String,Microsoft.SPOT.RoutingStrategy,System.Type)">
      <summary>RoutedEvent クラスの新規インスタンスを初期化します。
</summary>
      <param name="name">ルーティング イベントの識別名。</param>
      <param name="routingStrategy">ルーティング イベントのルーティング戦略。 </param>
      <param name="handlerType">ルーティング イベントのハンドラの型。</param>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEvent.ToString">
      <summary>現在の RoutedEvent オブジェクトの文字列表記を取得します。</summary>
      <returns>現在のルーティング イベントの文字列表記。この文字列は、Name プロパティによって返される値と同一である点に注意してください。</returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEvent.HandlerType">
      <summary>現在の RoutedEvent オブジェクトのハンドラの型を取得します。
</summary>
      <returns>現在のルーティング イベントのハンドラの型。 </returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEvent.Name">
      <summary>現在の RoutedEvent オブジェクトの識別名を取得します。</summary>
      <returns>現在のルーティング イベントの識別名。</returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEvent.RoutingStrategy">
      <summary>現在の Routed Event オブジェクトのルーティング戦略を取得します。</summary>
      <returns>RoutingStrategy 列挙型の値。 
      </returns>
    </member>
    <member name="T:Microsoft.SPOT.RoutedEvent">
      <summary>ルーティング イベントを表して識別し、その特性を宣言します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEventArgs.#ctor(Microsoft.SPOT.RoutedEvent)">
      <summary>
提供されるルーティング イベント識別子を使用して、RoutedEventArgs クラスの新規インスタンスを初期化します。
  </summary>
      <param name="routedEvent">
現在の RoutedEventArgs オブジェクトのルーティング イベント識別子。
      </param>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEventArgs.#ctor(Microsoft.SPOT.RoutedEvent,System.Object)">
      <summary>提供されるルーティング イベント識別子を使用して、RoutedEventArgs クラスの新規インスタンスを初期化します。このコンストラクタを使用することで、イベントに異なるソースを宣言できるようにもなる点に注意してください。</summary>
      <param name="routedEvent">現在の RoutedEventArgs オブジェクトのルーティング イベント識別子。</param>
      <param name="source">ルーティング イベントが処理される際に報告される別のソース。 </param>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEventArgs.#ctor">
      <summary>RoutedEventArgs クラスの新規インスタンスを初期化します。
  </summary>
    </member>
    <member name="M:Microsoft.SPOT.RoutedEventArgs.OnSetSource(System.Object)">
      <summary>オブジェクトの Source プロパティの値が変化するたびに、通知コールバックのエントリ ポイントを提供します。 </summary>
      <param name="source">このメソッドの呼び出しをトリガする Source プロパティを持つオブジェクトを含みます。</param>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEventArgs.Handled">
      <summary>特定のルーティング イベントがルートを通過するとき、そのイベントのイベント処理の現在の状態を示す値を取得または設定します。 </summary>
      <returns>このプロパティを設定する場合 :ルーティング イベントが処理済みとしてマークされる場合、true。それ以外の場合、false。このプロパティを読み取る場合 :ルートに沿って、クラス ハンドラまたは一部のインスタンス ハンドラが既にこのイベントを処理済みとしてマークしている場合、true。それ以外の場合、false。既定値は、false です。</returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEventArgs.OriginalSource">
      <summary>
現在のルーティング イベントを発生させた元のオブジェクトを取得します。
  </summary>
      <returns>クラス処理によって Source プロパティに対して何らかの調整を加えることが可能になる前の、元のレポート ソース。</returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEventArgs.RoutedEvent">
      <summary>ルーティング イベントを取得または設定します。</summary>
      <returns>ルーティング イベント。</returns>
    </member>
    <member name="P:Microsoft.SPOT.RoutedEventArgs.Source">
      <summary>現在のルーティング イベントを発生させたオブジェクトへの参照を取得または設定します。 </summary>
      <returns>現在のルーティング イベントを発生させたオブジェクト。 </returns>
    </member>
    <member name="T:Microsoft.SPOT.RoutedEventArgs">
      <summary>特定のルーティング イベントと関連付けられた状態情報とイベント データを提供します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.RoutedEventHandlerInfo">
      <summary>イベント ルートを構築します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.RpcClient">
      <summary>リモート プロシージャ コール用のクライアントを提供します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.RpcServer">
      <summary>リモート プロシージャ コール用のサーバーを提供します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SerializationHintsAttribute.ArraySize">
      <summary>シリアル化された特定の配列のサイズを指定します。  </summary>
    </member>
    <member name="F:Microsoft.SPOT.SerializationHintsAttribute.BitPacked">
      <summary>現在のオブジェクトを何ビットにビット圧縮するかを指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SerializationHintsAttribute.Flags">
      <summary>現在のオブジェクトのシリアル化について説明するフラグを含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SerializationHintsAttribute.RangeBias">
      <summary>特定のシリアル化された値の範囲バイアス調整を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SerializationHintsAttribute.Scale">
      <summary>特定のシリアル化された値のスケール調整を指定します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.SerializationHintsAttribute">
      <summary>特定のシリアル化できるオブジェクトに、シリアル化の既知の属性とメソッドが存在することを示します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.Socket">
      <summary>内部使用専用。代わりに、System.Net.Sockets を使用してください。</summary>
    </member>
    <member name="M:Microsoft.SPOT.SystemTime.#ctor">
      <summary>SystemTime オブジェクトを構築します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.DayOfWeek">
      <summary>特定の SystemTime オブジェクトに関連付けられる曜日を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Day">
      <summary>特定の SystemTime オブジェクトに関連付けられる日を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Hour">
      <summary>特定の SystemTime オブジェクトに関連付けられた時間を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Milliseconds">
      <summary>特定の SystemTime オブジェクトに関連付けられたミリ秒を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Minute">
      <summary>特定の SystemTime オブジェクトに関連付けられた分を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Month">
      <summary>特定の SystemTime オブジェクトに関連付けられた月を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Second">
      <summary>特定の SystemTime オブジェクトに関連付けられた秒を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.SystemTime.Year">
      <summary>特定の SystemTime オブジェクトに関連付けられた年を指定します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.SystemTime">
      <summary>デバイスの現在のシステム時刻を設定または取得します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.TimeZoneInformation.#ctor">
      <summary>TimeZoneInformation オブジェクトを構築します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.Bias">
      <summary>このオペレーティング システムで変換されるローカル時間に対し、現在の時差を分単位で指定します。 </summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.DaylightBias">
      <summary>特定のタイム ゾーンの夏時間の間に行われるローカル時間の変換で使用される時差の値を指定します。  </summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.DaylightDate">
      <summary>このオペレーティング システムで標準時間から夏時間に切り替わるときの日付とローカル時間を指定します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.DaylightName">
      <summary>夏時間の説明を含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.StandardBias">
      <summary>特定のタイム ゾーンの標準時で生じるローカル時間の変換用に使用するバイアス値を指定します。 </summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.StandardDate">
      <summary>夏時間から標準時への切り替えがこのオペレーティング システムで起こる日付とローカル時間を含みます。</summary>
    </member>
    <member name="F:Microsoft.SPOT.TimeZoneInformation.StandardName">
      <summary>標準時の説明を含みます。</summary>
    </member>
    <member name="T:Microsoft.SPOT.TimeZoneInformation">
      <summary>特定のタイム ゾーンを説明する情報を含みます。</summary>
    </member>
    <member name="M:Microsoft.SPOT.TinySystem.#ctor">
      <summary>TinySystem クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.TinySystem.Initialize">
      <summary>ハードウェアを初期化し、ウィンドウ マネージャを作成します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.TinySystem">
      <summary>ハードウェア初期化用のコンストラクタとメソッドを提供します。</summary>
    </member>
    <member name="F:Microsoft.SPOT.UnknownTypeException.m_type">
      <summary>現在の例外を発生させた未知の型への参照を含みます。</summary>
    </member>
    <member name="T:Microsoft.SPOT.UnknownTypeException">
      <summary>未知の型が原因でエラーが発生した場合、スローされる例外。</summary>
    </member>
    <member name="M:Microsoft.SPOT.WeakDelegate.#ctor">
      <summary>WeakDelegate クラスのインスタンスを作成および初期化します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.WeakDelegate.Combine(System.Delegate,System.Delegate)">
      <summary>2 つのマルチキャスト (結合可能) デリゲートの呼び出しリストを連結します。</summary>
      <param name="a">1 番目に配置する呼び出しリストを持つ結合可能デリゲート。</param>
      <param name="b">2 番目に配置する呼び出しリストを持つ結合可能デリゲート。</param>
      <returns>a および b パラメータの呼び出しリストをこの順番で連結した呼び出しリストを持つ新規の結合可能デリゲート。このメソッドは、b が null 参照の場合は a を返します。a が null 参照の場合は b を返します。a と b のどちらも null 参照の場合は、null を返します。
            </returns>
    </member>
    <member name="M:Microsoft.SPOT.WeakDelegate.Remove(System.Delegate,System.Delegate)">
      <summary>指定されたデリゲートの呼び出しリストを、別の指定されたデリゲートの呼び出しリストから削除します。</summary>
      <param name="a">呼び出しリストの削除元のデリゲート。</param>
      <param name="b">a で指定されたデリゲートから削除する呼び出しリストを持つデリゲート。</param>
      <returns>b の呼び出しリストが a の呼び出しリスト内にある場合、a パラメータの呼び出しリストから、b パラメータの呼び出しリストを削除して得られる呼び出しリストを持つ新しいデリゲート。b が null 参照の場合、または b の呼び出しリストが a の呼び出しリスト内に存在しない場合、このメソッドは a を返します。b の呼び出しリストが a の呼び出しリストと同じ場合、または b が null 参照の場合、このメソッドは null を返します。</returns>
    </member>
    <member name="T:Microsoft.SPOT.WeakDelegate">
      <summary>"弱い" デリゲートを組み合わせて削除するメソッドを提供します。</summary>
    </member>
    <member name="M:Microsoft.SPOT.WindowCollection.#ctor">
      <summary>WindowCollection クラスの新規インスタンスを初期化します。 </summary>
    </member>
    <member name="M:Microsoft.SPOT.WindowCollection.CopyTo(Microsoft.SPOT.Presentation.Window[],System.Int32)">
      <summary>ウィンドウ コレクションから Window オブジェクトを指定された配列にコピーします。ウィンドウ コレクション内の指定されたインデックス番号がコピーの開始位置となります。
  </summary>
      <param name="array">
コピー先となる Window オブジェクト配列。
      </param>
      <param name="index">コピーの開始位置となる、現在のウィンドウ コレクション内のインデックス番号。</param>
    </member>
    <member name="M:Microsoft.SPOT.WindowCollection.GetEnumerator">
      <summary>ウィンドウ コレクション内の Window オブジェクトを列挙処理するためにプログラムで使用できる IEnumerator インターフェイスを返します。</summary>
      <returns>ウィンドウ コレクション内の Window オブジェクトを列挙処理するためにプログラムで使用できる IEnumerator インターフェイス。</returns>
    </member>
    <member name="P:Microsoft.SPOT.WindowCollection.Count">
      <summary>
特定のウィンドウ コレクション内の Window オブジェクト数を取得します。
  </summary>
      <returns>ウィンドウ コレクション内の Window オブジェクト数を指定する整数。
    </returns>
    </member>
    <member name="P:Microsoft.SPOT.WindowCollection.IsSynchronized">
      <summary>特定のウィンドウ コレクションがスレッド セーフであるかどうかを示す値を取得します。</summary>
      <returns>
ウィンドウ コレクションがスレッド セーフである場合、true。それ以外の場合、false。</returns>
    </member>
    <member name="P:Microsoft.SPOT.WindowCollection.Item">
      <summary>特定のウィンドウ コレクション内の指定されたインデックス番号の Window オブジェクトを取得します。</summary>
      <returns>ウィンドウ コレクション内の指定されたインデックス番号の Window オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.SPOT.WindowCollection.SyncRoot">
      <summary>特定の WindowCollection へのアクセスの同期に使用できるオブジェクトを取得します。 </summary>
      <returns>ウィンドウ コレクションへのアクセスの同期に使用できるオブジェクト。</returns>
    </member>
    <member name="T:Microsoft.SPOT.WindowCollection">
      <summary>アプリケーションの各ウィンドウ オブジェクトを、単一のセットまたはウィンドウ コレクションに収集します。</summary>
    </member>
    <member name="T:Microsoft.SPOT.CancelEventHandler">
      <summary>キャンセル可能なイベントを処理するメソッドを提供します。</summary>
      <param name="sender">イベントの送信元 (ソース)。</param>
      <param name="e">イベントを説明するデータ。</param>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherOperationCallback">
      <summary>ディスパッチャを操作するためのコールバック機能を提供します。 </summary>
      <param name="arg">コールバック メソッドに渡される引数。このパラメータの値は null の場合もあります。</param>
      <returns>コールバック メソッドにより返されるオブジェクト。この値は null の場合もあります。
    </returns>
    </member>
    <member name="T:Microsoft.SPOT.EventHandler">
      <summary>イベント データを持たないイベントを処理するメソッドを提供します。</summary>
      <param name="sender">イベントの送信元 (ソース)。</param>
      <param name="e">イベント データを含まないパラメータ。 </param>
    </member>
    <member name="T:Microsoft.SPOT.PropertyChangedEventHandler">
      <summary>プロパティ変更イベントを処理します。</summary>
      <param name="sender">変更されるプロパティを持つオブジェクト。</param>
      <param name="e">プロパティの変更に関する情報。</param>
    </member>
    <member name="T:Microsoft.SPOT.RoutedEventHandler">
      <summary>ルーティング イベントを受信するイベント ハンドラを表します。</summary>
      <param name="sender">ルーティング イベントの送信元。</param>
      <param name="e">ルーティング イベントに関する情報を含むイベント引数。
      </param>
    </member>
    <member name="T:Microsoft.SPOT.Bitmap.BitmapImageType">
      <summary>ビットマップ イメージとして使用可能な形式をリストします。</summary>
      <param name="Bmp">Windows BMP 形式のビットマップ。</param>
      <param name="Gif">GIF 形式のビットマップ。</param>
      <param name="Jpeg">JPEG 形式のビットマップ。</param>
      <param name="TinyCLRBitmap">.NET Micro Framework 共通言語ランタイム (CLR) に固有の形式のビットマップ。</param>
    </member>
    <member name="T:Microsoft.SPOT.DispatcherOperationStatus">
      <summary>DispatcherOperation オブジェクトのステータスを示すための値を記述します。</summary>
      <param name="Aborted">操作が中止されたことを示す値。 </param>
      <param name="Completed">操作が完了したことを示す値。  </param>
      <param name="Executing">操作が実行を開始したが、完了していないことを示す値。 </param>
      <param name="Pending">操作が保留中であることを示す値。</param>
    </member>
    <member name="T:Microsoft.SPOT.ExtendedWeakReference.PriorityLevel">
      <summary>拡張された弱い参照の優先度を設定するための一連の定数を定義します。</summary>
      <param name="Critical">きわめて重要なデータ。</param>
      <param name="Important">重要ではあるが、きわめて重要ではないデータ。</param>
      <param name="NiceToHave">保持するのが望ましいが、きわめて重要ではないデータ。</param>
      <param name="OkayToThrowAway">破棄しても問題のないデータ。</param>
      <param name="System">基本動作に必須のシステム データ。</param>
    </member>
    <member name="T:Microsoft.SPOT.ReasonSessionEnding">
      <summary>セッション終了の理由を指定します。 </summary>
      <param name="Logoff">ユーザーがログオフしたことを指定する値。</param>
      <param name="Shutdown">ユーザーがシステムをシャットダウンしたことを指定する値。</param>
    </member>
    <member name="T:Microsoft.SPOT.RoutingStrategy">
      <summary>ルーティング イベントのルーティング戦略を示します。 </summary>
      <param name="Bubble">イベントが "バブル" 戦略を使用することを示す値。イベント インスタンスは、この戦略でツリーを上昇します。</param>
      <param name="Direct">イベントがルーティングをサポートしないことを示す値。  </param>
      <param name="Tunnel">イベントが "トンネリング" 戦略を使用することを示す値。イベント インスタンスは、この戦略でツリーを下降します。</param>
    </member>
    <member name="T:Microsoft.SPOT.SerializationFlags">
      <summary>シリアル化 (シリアル化されたオブジェクト) のさまざまな属性を示す一連のフラグを定義します。</summary>
      <param name="Compressed">シリアル化されたオブジェクトが圧縮されていることを示す値。このフラグは、現在実装されていません。</param>
      <param name="DemandTrusted">このフラグは、現在実装されていません。</param>
      <param name="ElementsNeverNull">シリアル化されたオブジェクト内の各要素が null であってはならないことを示す値。</param>
      <param name="Encrypted">シリアル化されたオブジェクトが暗号化されていることを示す値。このフラグは、現在実装されていません。</param>
      <param name="FixedType">シリアル化されたオブジェクトが、派生クラスのインスタンスではなく、指定されたクラスのインスタンスでなければならないことを示す値。</param>
      <param name="Optional">シリアル化を解除できない場合、シリアル化されたオブジェクトをスキップできることを示す値。このフラグは、現在実装されていません。</param>
      <param name="PointerNeverNull">シリアル化されたオブジェクトへのポインタが null であってはならないことを示す値。</param>
    </member>
    <member name="T:Microsoft.SPOT.ShutdownMode">
      <summary>アプリケーションがどうシャットダウンするかを定義します。</summary>
      <param name="OnExplicitShutdown">Application.Shutdown メソッドをプログラムが明示的に呼び出したとき、アプリケーションをシャットダウンさせる値。</param>
      <param name="OnLastWindowClose">最後のウィンドウが閉じたとき、または Application.Shutdown メソッドをプログラムが明示的に呼び出したとき、アプリケーションをシャットダウンさせる値。これが既定の設定である点に注意してください。</param>
      <param name="OnMainWindowClose">メイン ウィンドウが閉じたとき、または Application.Shutdown メソッドをプログラムが明示的に呼び出したとき、アプリケーションをシャットダウンさせる値。</param>
    </member>
    <member name="T:Microsoft.SPOT.ExtendedTimer.TimeEvents">
      <summary>.NET Micro Framework で利用可能なさまざまなタイマ イベントを定義します。</summary>
      <param name="Day">日の変更で発生するイベント。</param>
      <param name="Hour">時間の変更で発生するイベント。</param>
      <param name="Minute">分の変更で発生するイベント。</param>
      <param name="Second">秒の変更で発生するイベント。</param>
      <param name="SetTime">指定された時間で発生するイベント。</param>
      <param name="TimeZone">タイム ゾーンの変更で発生するイベント。</param>
    </member>
    <member name="T:Microsoft.SPOT.TimeZoneId">
      <summary>.NET Micro Framework アプリケーションで利用可能なタイム ゾーンのセットを提供します。</summary>
      <param name="AbuDhabi">アブダビ</param>
      <param name="Adelaide">アデレード</param>
      <param name="Alaska">アラスカ</param>
      <param name="Almaty">アルマトイ</param>
      <param name="Arizona">アリゾナ</param>
      <param name="Astana">アスタナ</param>
      <param name="Athens">アテネ</param>
      <param name="Atlantic">大西洋標準時</param>
      <param name="Azores">アゾレス諸島</param>
      <param name="Baghdad">バグダッド</param>
      <param name="Baku">バクー</param>
      <param name="Bangkok">バンコク</param>
      <param name="Beijing">北京</param>
      <param name="Berlin">ベルリン</param>
      <param name="Bogota">ボゴタ</param>
      <param name="Brasilia">ブラジリア</param>
      <param name="Brisbane">ブリズベン</param>
      <param name="Bucharest">ブカレスト</param>
      <param name="BuenosAires">ブエノスアイレス</param>
      <param name="Cairo">カイロ</param>
      <param name="CapeVerde">カーボベルデ</param>
      <param name="Caracas">カラカス</param>
      <param name="Casablanca">カサブランカ</param>
      <param name="CentAmerica">中央アメリカ</param>
      <param name="Central">中央アメリカ</param>
      <param name="COUNT">タイム ゾーン ID の総数</param>
      <param name="Current">現在のタイム ゾーン ID</param>
      <param name="Darwin">ダーウィン</param>
      <param name="Dateline">文字列リソース</param>
      <param name="Eastern">東部標準時</param>
      <param name="FijiIslands">フィジー諸島</param>
      <param name="FIRST">最初のタイム ゾーン ID</param>
      <param name="FIRST_RESOURCE">最初のリソース文字列</param>
      <param name="GMT">GMT、グリニッジ標準時 (UTC、協定世界時)</param>
      <param name="Greenland">グリーンランド</param>
      <param name="Guam">グアム</param>
      <param name="Hawaii">ハワイ</param>
      <param name="Helsinki">ヘルシンキ</param>
      <param name="Hobart">ホバート</param>
      <param name="Indiana">インディアナ</param>
      <param name="Islamabad">イスラマバード</param>
      <param name="Jerusalem">エルサレム</param>
      <param name="Kabul">カブール</param>
      <param name="Kathmandu">カトマンズ</param>
      <param name="Krasnoyarsk">クラスノヤルスク</param>
      <param name="LAST">最後のタイム ゾーン ID</param>
      <param name="London">ロンドン</param>
      <param name="Magadan">マガダン</param>
      <param name="Malaysia">マレーシア</param>
      <param name="MexicoCity">メキシコシティ</param>
      <param name="MidAtlantic">中央大西洋</param>
      <param name="Moscow">モスクワ</param>
      <param name="Mountain">山地標準時</param>
      <param name="Nairobi">ナイロビ</param>
      <param name="Network">ネットワーク提供のタイム ゾーン</param>
      <param name="NewDelhi">ニューデリー</param>
      <param name="Newfoundland">ニューファンドランド</param>
      <param name="NewZealand">ニュージーランド</param>
      <param name="Pacific">太平洋標準時</param>
      <param name="Paris">パリ</param>
      <param name="Perth">パース</param>
      <param name="Prague">プラハ</param>
      <param name="Pretoria">プレトリア</param>
      <param name="Riyadh">リヤド</param>
      <param name="Samoa">サモア</param>
      <param name="Santiago">サンティアゴ</param>
      <param name="Saskatchewan">サスカチュワン</param>
      <param name="Seoul">ソウル</param>
      <param name="SriLanka">スリランカ</param>
      <param name="Sydney">シドニー</param>
      <param name="Taipei">台北</param>
      <param name="Tehran">テヘラン</param>
      <param name="Tokyo">東京</param>
      <param name="Tonga">トンガ</param>
      <param name="Ulaanbataar">ウランバートル</param>
      <param name="Vladivostok">ウラジオストク</param>
      <param name="Warsaw">ワルシャワ</param>
      <param name="WCentAfrica">西中央アフリカ</param>
      <param name="Yakutsk">ヤクーツク</param>
      <param name="Yangon">ヤンゴン</param>
      <param name="Yekaterinburg">エカテリンブルク</param>
    </member>
  </members>
</doc>